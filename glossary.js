// glossaryファイル IT
`use strict`
const glossary = [
{target:`★IT業界の動向がわかるトレンド用語`, content:`ーーーーー`},
{target:`ゼロトラスト`, content:`どの通信も信頼できない、という前提で検査する。`},
{target:`エンドポイント`, content:`ネットワークに接続されている端末のこと。<br>パソコンやスマートフォンなどを指す。`},
{target:`エッジコンピューティング`, content:`端末側で処理してサーバーの負荷や遅延を減らす。`},
{target:`分散コンピューティング`, content:`複数のコンピュータでプログラムを同時に実行し、それぞれがネットワーク経由で連携して処理すること。`},
{target:`量子コンピュータ`, content:`難問を解くことを期待されているコンピュータ。`},
{target:`☆DX`, content:`データやデジタル技術で企業のビジネスモデルを変革する。`},
{target:`☆デジタイゼーション`, content:`デジタル化のこと。<br>アナログな作業をITを使ってデジタル情報として扱うことを指す。`},
{target:`☆デジタライゼーション`, content:`ITなどのデジタル技術を活用して、製品やサービスに付加価値をつけたり利便性を高めたりすること。`},
{target:`5G`, content:`携帯電話での第5世代の無線通信技術。`},
{target:`シンギュラリティ`, content:`人工知能の能力が人間を超えるという仮説。`},
{target:`チューリングテスト`, content:`人工知能の能力が人間と同等かどうかを調べるテスト。`},
{target:`☆RPA（Robotic Process Automation）`, content:`事務処理などの業務を自動化する。`},
{target:`LPWA（Low Power Wide Area）`, content:`低消費電力で長距離の通信を実現した無線通信技術。`},
{target:`LTE-M（Long Term Evolution for Machine-type-communication）`, content:`LTEの空いた領域を使用するIoT通信規格。`},
{target:`NGN（Next Generation Network）`, content:`次世代のネットワーク基盤。`},
{target:`トリプルプレイ`, content:`電話、データ通信、ストリーミングの3つを提供すること。`},
{target:`☆IPoE（IP over Ethernet）`, content:`LANと同じ方法でインターネットに接続する接続方式。`},
{target:`MaaS（Mobility as a Service）`, content:`ITを活用してあらゆる交通機関を統合して利用。`},
{target:`HCI（Hyper-Converged Infrastructure）`, content:`1台でシンプルなサーバー構成を実現できるインフラ製品。<br>サーバーのハードウェアだけでなく、ストレージやネットワーク、ソフトウェアなどサーバーの構築な必要な機能を1つにまとめた製品のこと。`},
{target:`3Tier（スリーティア）`, content:`サーバー、ストレージ、ネットワークの3つの層に分けて構築すること。<br>ニーズに合わせて追加や変更が可能なため、柔軟な構成ができるが、運用は複雑になる。`},
{target:`マイクロサービス`, content:`複数の小さなサービスに分類してアプリケーションを構成。<br>アプリケーションを開発する時、小さな機能ごとにサービスとして分割して作成し、最小限の連携だけで動作させる開発手法。新規の開発や保守（修正）が容易になり、問題が発生した場合にも影響範囲を限定できる。`},
{target:`モノリシック`, content:`マイクロサービスと反対の意味で使われ、一体となっていること。<br>処理は高速だが、機能の追加や変更が発生すると保守が大変。`},
{target:`ブロックチェーン`, content:`分散型ネットワークと暗号技術を使ったデータ管理手法。<br>取引の記録をブロックとよばれる場所に格納し、鎖（チェーン）のように連結して記録する。`},
{target:`マイニング`, content:`ブロックの生成に必要な膨大な計算をおこなうこと。`},
{target:`PoW（Proof of Work）`, content:`取引の記録を書き込むとき、それが正しいかどうかを仕事量で証明すること。`},
{target:`xR（VR：Virtual Reality、AR：Augmented Reality、MR：Mixed Reality）`, content:`現実世界と仮想世界の融合。<br>それぞれ仮想現実、拡張現実、複合現実と呼ばれる。`},
{target:`VRゴーグル`, content:`ゴーグルの中にある液晶モニターなどの画面を見ることで仮想世界を体験する。`},
{target:`ARゲーム`, content:`スマートフォンのゲームなどでは、カメラで実際の映像を撮影しながら、その映像の中に仮想的にキャラクターを表示し、操作するものが人気を集めている。`},
{target:`HoloLens`, content:`Microsoftが提供するメガネのようなMRデバイスで、単体で動作する。`},
{target:`☆LiDAR（Light Detection And Ranging）`, content:`反射を利用した距離の測定。<br>3次元での形状測定ができることから、地質調査や自動運転などで使われるだけでなく、スマートフォンやタブレット端末にも搭載されている。`},
{target:`ミリ波レーダー`, content:`LiDARと似た技術だがミリ波と呼ばれる電波により距離や角度を検知する。<br>夜間や悪天候でも高精度で取得できて安価だが、反射率の低い物体には向かない。`},
{target:`超音波センサー`, content:`光や電波ではなく、周波数の高い超音波を使用して検知する。<br>光と比べると、広範囲で検出でき、透明なガラスや液体なども認識できるという特徴がある。`},
{target:`オムニチャネル`, content:`ネットとリアルを融合したマーケティング手法。`},
{target:`O2O（Online to Offline）`, content:`オンラインからオフラインへ。<br>電子クーポンなど使ってインターネットを活用して実店舗への集客につなげること。`},
{target:`OMO（Online Merges with Offline）`, content:`オンラインとオフラインの融合。<br>ネットや実店舗といった考え方をなくし、顧客目線で最適な体験が得られるようにすること。`},
{target:`オンプレミス`, content:`サーバーを自社で構築・運用。`},
{target:`プライベートクラウド`, content:`自社専用で構築、運用するクラウド環境のこと。<br>一般的にはサーバーを仮想化し、柔軟性を高めている。`},
{target:`ハイブリッドクラウド`, content:`パブリッククラウドとプライベートクラウドを組合せ、良いところを取入れて構築するクラウド環境のこと。<br>セキュリティを意識する場合によく使われる。`},
{target:`ハウジング`, content:`データセンターのラックとネットワーク回線、電源などを借りて、自社のサーバーをその中に設置、運用すること。`},
{target:`VUI（Voice User Interface）`, content:`スマートスピーカーで広がる音声認識のインターフェイス。`},
{target:`サブスクリプション`, content:`利用料を支払って期間内だけ利用する契約。`},
{target:`リカーリング`, content:`繰り返すとの意味で継続的に収入を得るビジネスモデル。<br>プリンタのトナーを不定期に購入する等、コストが変動する従量課金制のサービスをさす。`},
{target:`アップセル`, content:`サブスクリプションで利用者が現在使っているプランよりも高額なプランにアップグレードしてもらうこと。`},
{target:`レベニューシェア`, content:`成功報酬型の収益モデル。<br>原則として初期開発費は受け取らない。代わりに、サービスの売り上げに対して一定の割合で報酬を受け取る契約のこと。`},
{target:`☆NFC（Near Field Communication）`, content:`非接触のICチップで実現した近距離の無線通信。`},
{target:`フィンテック`, content:`ITと金融の融合。`},
{target:`SDGs（Sustainable Development Goals）`, content:`世界が抱える諸問題に対するゴール。`},
{target:`ESG投資（Environment, Social, Governance）`, content:`環境や社会、企業統治の3つの視点から、これらに配慮している企業を重視し、選別して投資すること。`},
{target:`CSR/CSV（Corporate Social Responsibility, Creating Shared Value）`, content:`前者は、企業の社会的責任。後者は、社会課題を解決することで社会価値と経済価値の両方を生み出すこと。`},
{target:`デジタルツイン`, content:`サイバー空間上に物理空間を再現する。`},
{target:`eSIM（embedded Subscriber Identity Module）`, content:`交換せずにキャリアや通信プランを変更できるSIM。`},
{target:`GIGAスクール構想（Global and Innovation Gateway for All）`, content:`学校におけるICTの活用。`},
{target:`CBTの導入（Computer Based Training）`, content:`画面上で授業やテストを受けること。`},
{target:`データサイエンティスト`, content:`ビックデータやAIを活用してデータから知見を得る人。`},
{target:`データマイニング`, content:`大量のデータを分析し新たな知見を発見すること。`},
{target:`データクレンジング`, content:`保存されているデータの中から、重複や誤り、不整合などを調べ、不正確なデータの除去や修正などをおこなって、分析に使えるように加工すること。`},
{target:`レコメンデーション`, content:`顧客に合わせた商品やサービスをおすすめ。<br>顧客が興味を持ちそうな商品やサービス、情報などを顧客が自分から行動を起こす前に提示すること。`},
{target:`レコメンドエンジン`, content:`顧客の年齢層や性別などの属性や、過去の購買履歴といったデータを分析し、用意されたアルゴリズムで顧客の好みに合う商品やサービスを提案するソフトウェア。`},
{target:`パーソナライゼーション`, content:`顧客の属性や購買履歴などを分析した結果を使ってその顧客にとって最適な情報を提供する手法のこと。`},
{target:`アソシエーション分析`, content:`データ間の関連の強さを求める方法。<br>代表的な手法としてマーケット・バスケット分析がある。ある商品を購入した人が他に購入した商品を調べるときに使われる。`},
{target:`ダイナミックプライシング`, content:`需要と共有に合わせて値段を変動させる。`},
{target:`プライステック`, content:`製品やサービスの値段を人間が決めるのではなく、AIやビックデータを活用して最適な価格を決めること。`},
{target:`ノーコードとローコード`, content:`最小限のコーディングでソフトウェアを開発。<br>さまざまな開発ツールを組合せ、ソースコードを書かずに、またはほとんど書かずにソフトウェアを開発する手法。`},
{target:`RAD（Rapid Application Development）`, content:`高速アプリケーション開発。<br>ソフトウェアの開発における一部の作業を自働化したり、複雑な処理も簡単に実装したりできるように工夫している開発ツール。`},
{target:`IDE（Integrated Development Environment）`, content:`統合開発環境。<br>ソフトウェアの開発に必要なテキストエディタやコンパイラ、デバッカ、バージョン管理といった機能を1つにまとめたソフトウェア。`},
{target:`OTG（USB On-The-Go）`, content:`スマホとUSB機器を直接接続できる規格。<br>USB機器同士を接続できる規格のこと。`},
{target:`デュアルロール`, content:`ホスト側とデバイス側の両方の役割を持つデバイスのこと。`},
{target:`STEM教育とSTEAM教育（Science, Technology, Engineering (,Art) and Mathematics）`, content:`理数教育に創造性教育を加えた教育概念。`},
{target:`Scratch`, content:`小学生でも簡単に学べる無料のプログラミング言語。`},
{target:`アクティブラーニング`, content:`生徒が能動的に学ぶような授業方法のこと。<br>グループワークを使うなど、何を学ぶかではなく、如何に学ぶかがポイント。`},
{target:`ドッグフーディング`, content:`社内で自社の製品を使ってテストする。<br>自社で開発した製品を自社の従業員が日常的に使ってテストすること。`},
{target:`アルファ版`, content:`ソフトウェア開発の初期に提供されるテスト版のこと。`},
{target:`ベータ版`, content:`ソフトウェアをリリースする前に一部の利用者に使用してもらうバージョンのこと。`},
{target:`モンキーテスト`, content:`ソフトウェアなどをテストするときに、検証する内容や手順などを事前に決めずに、思い付きで操作すること。<br>思い込みによる見落としを防ぐ意味がある。`},
{target:`★エンジニア1年目から知っておきたい基本用語`, content:`ーーーーー`},
{target:`GDPR（General Data Protection Regulation）`, content:`EUにおける個人情報保護の枠組み。`},
{target:`データポータビリティ`, content:`あるサービスが収集、蓄積した、特定のユーザーに関する利用履歴などの個人データを、利用者が他のサービスにも持ち運べて再利用できること。`},
{target:`プロファイリング`, content:`個人の既知の情報を使って、その人物の既知でない情報を推定したり、その行動などを予測すること。`},
{target:`CCPA（Califolnia Consumer Privacy Act）`, content:`カリフォルニア州における個人情報保護の枠組み。`},
{target:`ISO/IEC 27701:2019`, content:`EUのGDPRやカルフォルニアのCCPA、インドのPDPBなど世界各国で広がるプライバシー法規制に対する包括的な運用体制やしくみに対応した認証規格。`},
{target:`CxO（CTO,CIO,CISO,…）（Chief xxx Officer）`, content:`企業における様々な責任者の総称と呼称。`},
{target:`CTO（Chief Technical Officer）`, content:`最高技術責任者。<br>企業において技術面、特にシステム開発や研究開発などに関する責任を負っているトップ。`},
{target:`CIO（Chief Information Officer）`, content:`最高情報責任者。<br>企業において情報システムに関する責任を負っているトップ。社内のIT導入、維持管理などを担当する。`},
{target:`CISO（Chief Information Security Officer）`, content:`最高情報セキュリティ責任者。<br>企業において情報セキュリティに関する責任を負っているトップ。`},
{target:`VPoE（Vice President of Engineering）`, content:`エンジニアを率いるマネジメント責任者。<br>CTOが経営側の立場から技術面を担当するのに対し、採用や教育、評価といった人事面の方針を決定し、組織としてエンジニアが働いやすい環境を作ることが求められる。`},
{target:`チームビルディング`, content:`ソフトウェアの開発などの目標を達成するためにメンバーを集め、それぞれのメンバーが自分の能力を発揮し、組織としてよい成果が得られるチームを作ること。`},
{target:`タックマンモデル`, content:`チームを構成してから、そのチームが機能するまでを段階に分けて考えるモデル。<br>形成期、混乱期、統一期、機能期、散会期の5つがあるとされている。`},
{target:`VPoTとVPoP（Vice President of Technical, Vice President of Product）`, content:`VPoEと似た職種として、前者は、技術面を支え、後者は、プロダクトの方向性を決める。<br>経営も考えるCTOをそれぞれの分野で支える役割をする。`},
{target:`テックリード`, content:`技術面でチームを引っ張り、他チームと連携する。<br>マネージャーという立場よりも1人のメンバーとしてチームの先頭に立つ役割のこと。技術面でソースコードレビューなど品質を確保するだけでなく、組織面では他のチームとの調整などを任されることも多い。`},
{target:`プロダクトオーナー`, content:`システム開発において、プロダクトの方向性を決める責任者。<br>ビジョンを明確にする役割がある。優先順位をつけ、スクラム開発ではチーム全体の状況を把握する。`},
{target:`EM（Engineering Manager）`, content:`エンジニアの技術力や働き方を最大化する。<br>プロジェクトやプロダクトの範囲にとらわれず、チームとしてエンジニアの技術力を高め、働きやすい環境を整えるマネージャーの役割のこと。人員の採用や人事制度、評価、チーム間の調整などチームとして生産性を最大化できる仕組みを作ることが求められる。`},
{target:`オンボーディング`, content:`新しく組織に入ったメンバーに対して教育を行い、早期に戦力となれるように支援すること。`},
{target:`エンゲージメント向上`, content:`従業員が仕事に取組むときの心理状態のことをいい、期待されていることを理解し、成長の機会が与えられることなどにより高まると考えられる。`},
{target:`PM（Project Manager）`, content:`プロジェクト全体を統括する役割で、予算やスケジュールの管理などをおこなう。`},
{target:`フルスタック`, content:`1人で幅広い領域の技術を網羅。<br>一般的には、Webアプリの開発において、サーバーの構築からネットワークやデータベースなどのインフラ整備、サーバーサイドやフロントエンドのプログラミング言語まで幅広く精通している技術者を呼ぶ。ベンチャー企業などで重宝される。`},
{target:`ITSSとUISS（IT Skill Standard, Users' Information System Skill Standards）`, content:`前者は、ITスキル標準、後者は情報システムユーザースキル標準。<br>ITエンジニアに求められるスキルのレベルが情報処理技術者試験と対応付けられている。`},
{target:`スキルマップ`, content:`従業員の能力を一覧として表にまとめたもの。<br>ITSSやUISSを参考にして作成することが多く、業務遂行に必要なスキルの整理に使われる。`},
{target:`グロースハッカー`, content:`マーケティングの視点を持ち、インターネットを駆使して1人でビジネスを成長させられる人のこと。`},
{target:`1 on 1`, content:`部下の成長をサポートする定期的なミーティング。<br>主に、コーチング、ティーチング、フィードバックが行われる。`},
{target:`コーチング`, content:`相手が自分自身で考えて答えを導き出すように指導する方法。<br>意見をじっくり聞く傾聴や、適切な質問により深堀すること、成果を褒めることなどが使われる。`},
{target:`ティーチング`, content:`経験や知識が少ない相手に対して、学校での授業のように技術などを解説すること。<br>その背景や理由なども含めて論理的に解説することが求められる。`},
{target:`フィードバック`, content:`これまでの活動を整理し、問題点があれば軌道修正するために改善点の助言や指摘、貢献への感謝などを伝えること。`},
{target:`OKR（Objectives and Key Results）`, content:`会社の目標と個人の目標を連携させるフレームワーク。<br>仕事における目標設定において、組織全体の目標と、組織で働く個人の目標を連携させる手法。`},
{target:`MBO（Management by Objectives）`, content:`目標管理の方法。<br>上司と部下で目標設定し、半年や1年間での達成度を評価。`},
{target:`SMART（Specific, Measurable, Achievable, Relevant, Time-based）`, content:`目標設定の5要素。<br>具体的、測定可能、達成可能、経営目標に関連し、時間制約がある指標のこと。`},
{target:`情報銀行`, content:`個人の行動履歴や購買履歴などの情報を管理し、他の事業者に提供する事業のこと。<br>データの提供先や利用目的については、本人が同意した範囲で提供され、詳細なデータを使えることが期待されている。`},
{target:`オプトイン`, content:`本人の同意を事前に得ること。`},
{target:`オプトアウト`, content:`本人の同意を事前に得ないこと。`},
{target:`Society 5.0`, content:`IoTで新たな価値を産みだし、課題や困難を克服。<br>狩猟社会、農耕社会、工業社会、情報社会に続く新たな社会のこと。IoTやロボット技術などによって人とモノがつながり、新たな価値が生み出されることが期待される。`},
{target:`カオスマップ`, content:`業界地図のこと。<br>各事業の所属するカテゴリーなどを一覧にしたもの。`},
{target:`CGM（Consumer Generated Media）`, content:`インターネット上の掲示板やSNS、口コミなどを通して、一般の利用者が情報を発信してコンテンツができていくメディアのこと。`},
{target:`ライブコマース`, content:`リアルタイムに商品の紹介などの動画を配信し、そこで消費者とコミュニケーションをとることでインタラクティブに接客をする手法で、消費者も簡単に購入できる。`},
{target:`コネクティッドシティ`, content:`最先端技術で作る未来都市。<br>自動運転やドローン、キャッシュレス決裁、遠隔医療、オンライン教育など物流や金融、医療、教育といったあらゆる分野の先端技術を組み合わせて、住みやすい街を作ること。AIやIoT、ビックデータを活用して都市課題を解決する。`},
{target:`スマートグリッド`, content:`ITを使いエネルギーの需要を測定し、必要なところに効率よく送電する仕組み。`},
{target:`スマートメータ―`, content:`電力やガス、水道の使用量を測定する機能に加え、通信機能により電力会社などに検針結果やリアルタイムの使用量などを送信できる。`},
{target:`スマートホーム`, content:`AIやIoTの技術を使って設備を便利に利用できる住宅のこと。`},
{target:`ギグエコノミー`, content:`インターネット経由で一時的な仕事を受ける新しい働き方。`},
{target:`クラウドソーシング`, content:`ネットなどで個人や企業をマッチングし仕事の発注や受注を行う仕組み。<br>インターネット経由で単発あるいは一時的な仕事を受注する働き方のことで、一般的にはフリーランスや個人事業主として企業と契約する。`},
{target:`シェアリングエコノミー`, content:`ネットを通して個人をマッチングし、モノや場所、スキル、お金、時間などを必要な時に必要なだけ個人間で共有する社会やサービスのこと。`},
{target:`インダストリー4.0`, content:`製造業における新たな産業革命。<br>AIやIoTによる高度な自働化のこと。スマートファクトリーとも呼ばれ、より効率よく製造できる。石炭による軽工業の機械化（第1次）、石油による重工業の機械化（第2次）、コンピュータによる機械の自働化（第3次）に続く。`},
{target:`セル生産`, content:`1つの製品を少人数で組み立てる方式。<br>仕様変更にも柔軟に対応でき、少量多品種の生産が可能。`},
{target:`ダイナミックセル生産`, content:`リアルタイムに変化する情報をネット経由でロボットが取得し、その情報に応じて生産する方式。<br>ライン生産とセル生産の良いところを組合せている。`},
{target:`PoC（Proof of Concept）`, content:`概念実証。<br>新しいアイデアを試して投資判断に役立てる。新しい技術やアイデアなどを実際に試してみることを指す。製品やシステムの簡易版を作ってみて、その実現可能性や社会での需要などを見定めるために実施される。`},
{target:`パイロットプロジェクト`, content:`一部の部署、利用者だけを対象として試験的に実施されるプロジェクトのこと。`},
{target:`PoT（Proof of Technology）`, content:`技術実証。<br>技術的な課題の有無を検証するために実施される。ビジネス的より、技術的な視点であり、実現可否を調べること。`},
{target:`R＆D（Research and Development）`, content:`研究開発。`},
{target:`PLM（Product Lifecycle Management）`, content:`製品の企画から廃棄までを管理する手法。<br>製品を開発、販売する上で、製品の企画から設計、開発、運用、保守という流れだけでなく、廃棄まで含めて一元管理すること。`},
{target:`プロダクトアウト`, content:`企業側が良いと思ったものを作る、売りたいものを売るという考え方。<br>顧客の要望よりも企業側の計画を優先して製品を製造、販売すること。`},
{target:`マーケットイン`, content:`顧客側がこれが欲しいというものを重視して、売るものを作るという考え方。<br>企業の計画よりも顧客の視点で製品を開発、販売すること。`},
{target:`BPMとBPMS（Business Process Management (Suite/System)）`, content:`企業の業務改善を可視化。<br>仕事を進める上での手順や役割分担、ルールなどを関係者の間で共有し、その業務の流れにおける問題点などの分析や最適化を継続的に繰り返して改善すること。ITツールを使ってリアルタイムで可視化し、対策を実施するツールや、単純にツールを導入するだけでなく、戦略的に業務を改善・改革する活動をさす。`},
{target:`BRMS（Business Rule Management System）`, content:`実務におけるルールを管理してシステム開発を効率化。<br>組織などにおけるビジネスのルールをルールエンジンと呼ばれる場所に登録して管理する手法。`},
{target:`ナレッジマネジメント`, content:`従業員の持つ知識を組織の内部で蓄積、共有し、組織として活用する試み。<br>専用のシステムが導入されることもある。`},
{target:`DMN（Decition Model and Notation）`, content:`BPMNの中で意思決定に関する部分を表現するための表記法。<br>意思決定に必要な情報、知識、根拠などを図で書くことで共通認識を持つために使われる。`},
{target:`BABOK（Business Analysis Body Of Knowledge）`, content:`ビジネスアナリシス知識体系ガイド。<br>プロジェクトの上流工程にてビジネスを分析するときのベストプラクティスをまとめたもの。`},
{target:`ERP（Enterprise Resources Planning）`, content:`企業の基幹システムで全体を最適化。<br>組織運営に必要なヒト・モノ・カネ・情報の資源を有効に活用するため、組織が持つ情報を一元管理して経営戦略や戦術を決定するための考え方のこと。`},
{target:`BIツール（Business Intelligence）`, content:`データ分析に詳しくない人でも社内にあるデータを分析し、結果を活用できるツール。`},
{target:`パッケージ`, content:`在庫管理、顧客管理、会計システムなどをまとめて提供されているもの。<br>多くの場合、業務をシステムに合わせる必要がある。`},
{target:`SCM（Supply Chain Management）`, content:`受注から納品までを一元管理。<br>製品を製造する時に材料の調達（仕入れ）から販売までの全体の流れを最適化することを目指す管理手法。所要時間を短くするだけでなく、在庫を最小限に抑え、使用する設備の稼働率を向上させるなど、コストの削減や経営の効率化を目指す。`},
{target:`リードタイム`, content:`工程の最初から最後までにかかる時間のこと。<br>商品を発注してから納品されるまでの時間、受注から納品までの時間を指す。`},
{target:`BCP（Business Continuity Plan）`, content:`事業継続計画。<br>災害などが発生した時に、最低限の事業継続や短時間での復旧を実現するために、事前に計画を定めておくことを指す。`},
{target:`CRM（Customer Relationship Management）`, content:`顧客情報を管理して顧客に合った商品やサービスを提供。<br>顧客とのやり取りを記録・分析し、業務に活かす手法や、そのためのツールのこと。`},
{target:`インサイドセールス`, content:`営業担当者が、電話やメールなどを使って顧客とコミュニケーションをとる営業方法。`},
{target:`リードジェネレーション`, content:`見込み顧客獲得。<br>展示会での名刺交換やセミナーの開催、Webサイトの問合せフォームからの資料請求など。`},
{target:`リードナーチャリング`, content:`見込み顧客に対して情報の提供や問い合わせ対応を通して自社の顧客になってもらうこと。`},
{target:`SFA（Sales Force Automation）`, content:`企業の営業活動に関するデータを一元管理。<br>営業の自働化と訳され、営業担当者の日々の活動を入力することで、組織として顧客情報や進捗状況、売上の集計などが可能なシステムのことを指し、営業支援システムとも呼ばれる。`},
{target:`セグメンテーション`, content:`顧客を様々な視点から分類し、細分化して捉えることで多様なニーズに対しても効果的にアクセスすること。<br>STP（Segmentation Targeting Positioning）分析などの手法が使われる。`},
{target:`チャットボット`, content:`人工知能を使って顧客の問い合わせ対応を自働化。`},
{target:`VOCの管理（Voice Of Customer）`, content:`顧客の声のこと。顧客が感じていることを収集すること。`},
{target:`DSPとSSP（Demand Side Platform, Supply Side Platform）`, content:`Webにおける広告配信を最適化。<br>Webサイトに表示される広告について、広告を表示する側と配信する側のそれぞれの利益を最大化する仕組みやツールのこと。前者は、広告主や広告代理店といった広告配信側のプラットフォームでより安く表示できる配信先を探す。後者は、広告を表示するWebサイトなど媒体側のプラットフォームでより高額な広告を探して入札する。`},
{target:`RTB（Real Time Bidding）`, content:`リアルタイム入札。<br>Webｻｲﾄの広告を表示する時、リアルタイムにオークション形式でマッチングし、最も高い金額を付けた広告を表示する方式。`},
{target:`アドネットワーク`, content:`複数のWebサイトを取りまとめた広告ネットワーク。<br>DSPは複数の広告ネットワークに配信できる。`},
{target:`アドエクスチェンジ`, content:`アドネットワークが持つ広告枠を交換し、自由に売買する仕組み。`},
{target:`☆RFID（Radio Frequency IDentification）`, content:`ID情報を埋め込んだタグで商品などを管理。<br>電波や電磁波によって非接触で読み書きする仕組み。近くにあるタグをまとめて読み取れるため、効率よくスキャンできる。箱の中やタグが見えない状態でも使用できる。NFCと比べて通信距離が長い特徴がある。`},
{target:`パッシブタグ`, content:`電池などの電源が内蔵されておらず、読み書きする機器からの電力を使用して電波を発信するタグ。<br>通信距離は短いが、安価で半永久的に使用できる。`},
{target:`アクティブタグ`, content:`電池を内蔵しているため自ら電波を発信でき、長距離（数十から数百m）でも通信できるタグ。<br>人や物の位置をリアルタイムに把握するために使われる。`},
{target:`☆NFCタグ（Near Field Communication）`, content:`RFIDに近くスマホでも読み書きが可能で、読み取った時に様々な処理を実行できる。<br>1枚100円程度で購入できる。`},
{target:`アプライアンス`, content:`特定の機能に特化した機器。<br>特にネットワークやサーバーなどの製品に多い。機器を設置するだけで利用できるように設定されているため、導入や管理の手間がかからないとのメリットがある。ただし、新たな機能を追加する、増設によって性能を上げるといったことは難しく、汎用性に欠ける一面もある。`},
{target:`ファイル共有のNAS（Network Attached Storage）`, content:`ネットワーク接続型のハードディスク。<br>ネットワーク機能とストレージ機能を備えた製品。パソコンではなくLANに接続してファイル共有に使われる。`},
{target:`DMP（Data Management Platform）`, content:`情報を蓄積し、顧客に合わせて広告を配信する。<br>過去に自社のサイトで商品を購入した顧客に対して広告を配信するなど、顧客に合わせたマーケティングを実現するために使われる。DSPやSSPのマッチングの精度を高めるためにもつかわれる。`},
{target:`オープンDMP（Data Management Platform）`, content:`第三者から提供されたデータを管理する方法。<br>パブリックDMSとも呼ばれる。`},
{target:`プライベートDMP（Data Management Platform）`, content:`公開されているデータと、自社で蓄積してきたデータを組合せて管理する手法。<br>データの書式を統一して管理する。`},
{target:`アドテク`, content:`広告の配信をシステム化し、効率よく調整すること。`},
{target:`KPIとKGI（Key Performance Indicator, Key Goal Indicator）`, content:`企業や部署における目標達成の指標。<br>前者は、重要業績評価指標でページビューやコンバージョン率などの数値目標を指す。後者は、重要目標達成指標で売上高や利益率などの目標を指す。`},
{target:`ページビュー（PV）（Page View）`, content:`Webサイトで特定のページが開かれた回数のこと。<br>アクセス数の指標として使われる。同じ人が複数回アクセスした場合もカウントされる。`},
{target:`コンバージョン率`, content:`Webサイトのアクセス数のうち、利用者に取ってもらいたい行動が実施された割合。`},
{target:`KSF（Key Success Factor）`, content:`重要成功要因。<br>事業を成功させるために必要な要因のこと。外部要因と内部要因に分けて顧客のニーズに対応するために様々な視点で分析される。`},
{target:`チャーンレート`, content:`サブスクリプションの解約率。<br>サブスクリプション型のサービスでは安定して成長するための重要な指標として使われる。利用者の数では、全利用者数のうち解約した利用者や有料から無料に変更した利用者の数で割合を計算する。収益などの金額で測定する場合は、全体の金額のうち、解約した利用者の金額の割合を計算する。`},
{target:`ネガティブチャーン`, content:`解約による収益の減少よりも、高額な契約などに変更した利用者などの収益が上回ったこと。<br>単価を上げた場合などに発生し、経営状況としては悪くない。`},
{target:`カスタマーサクセス`, content:`自社製品を使った顧客の成功のこと。<br>継続して成功してもらえるよう積極的に支援する。`},
{target:`LTV（Life Time Value）`, content:`顧客生涯価値。<br>顧客がその企業にもたらす価値の合計を意味する。`},
{target:`MRRとARR（Monthly Recirromg Revenue, Annual Recurring Revenue）`, content:`サブスクリプション型のビジネスの成長を調べる指標。<br>前者は、月次経常収益でサブスクリプション型のサービスなどで毎月同じように発生する収益や売り上げのこと。単発で発生する売り上げなどは含まない。後者は、年次経常収益で前者を12倍した値だが年間契約が多いビジネスでよく使われる。`},
{target:`ARPU（Average Revenue Per User）`, content:`ユーザー平均単価。<br>MRRを利用者の数で割った値。`},
{target:`ARPPU（Average Revenue Per Paid User）`, content:`課金ユーザー平均単価。<br>MRRを課金している利用者の数で割った値。`},
{target:`CAC（Customer Acquisition Cost）`, content:`顧客獲得費用。<br>顧客獲得に要した費用と獲得した顧客数で割った値。`},
{target:`アジリティ`, content:`社会の変化に追随できる機敏性。<br>組織を運営する時に、社会の変化に対し臨機応変に対応する機敏性のこと。`},
{target:`VUCA（Volatility, Uncertainty, Complexity, Ambiguity）`, content:`激動、不確実性、複雑性、不透明性の頭文字。<br>予測がつかない不安定な状況。`},
{target:`エンドパワーメント`, content:`権限を委譲すること。`},
{target:`OODAループ（Observe, Orient, Decide, Act）`, content:`観察、状況判断、意思決定、行動の頭文字。<br>自ら判断して行動するためのフレームワーク。`},
{target:`☆EMS（Electronics Manufacturing Service）`, content:`製造業におけるアウトソーシング。<br>電子機器の製造を請け負うメーカーのこと。生産だけでなく、設計や部品の調達、組み立て、配送まで、一気通貫で対応する。発注元は製品の企画や販売などに注力でき、工場や人件費などのコストを削減できる。`},
{target:`☆OEM（Original Equipment Manufacturing）`, content:`製造メーカーが自社のブランドではなく他社のブランドで製品を作ること。<br>コスト削減や生産効率向上のために、発注元が自社で生産しないことを意味する。`},
{target:`☆ODM（Original Design Manufacturing）`, content:`製品の設計から製品開発までを受託者が行うこと。<br>発注側の技術力が低い場合などに、設計も含め依頼することで、ノウハウや技術力が無くても参入できる。`},
{target:`☆BPO（Business Process Outsourcing）`, content:`企業の内部管理部門である総務や人事、給与計算などの業務をアウトソーシングすること。<br>企業が本来の業務に集中するために使われることが多い。`},
{target:`☆Markdown`, content:`手軽に文書の構造を指定できる記法。<br>見出しや強調、箇条書きなど文書の構造を表現する時に、簡単な指定で手軽に記述できる記法のこと。`},
{target:`マークアップ言語`, content:`文章の構造をコンピュータに指示する言語。<br>Webページの作成に使われるHTMLなどがある。`},
{target:`Pandoc`, content:`様々なファイルの形式を変換するツール。<br>MarkDownからHTMLやWordだけでなく、LaTeXやRTF（Rich Text Format）、EPUBなどにも対応している。`},
{target:`☆ミドルウェア`, content:`OSとアプリの橋渡しをするソフトウェア。<br>OSとアプリケーションソフトの間で、高度なサービスや機能を提供するソフトウェア。Webサーバーやデータベースサーバーなどが該当し、単独では利用されない。データベースを個々のアプリケーションソフトで実装するのは大変だが、アプリケーションが利用することで簡単にデータベースの機能を実現できる。`},
{target:`DBMS（Database Management System）`, content:`データベース管理システム。<br>多くのデータがあったり、複数の人が利用したりしても整合性を保ち、登録、参照、更新、削除などを高速に処理できる。`},
{target:`☆Webサーバー`, content:`WebブラウザなどとHTTPと呼ばれるプロトコルでやり取りし、HTMLファイルや画像ファイルなどを提供するコンピュータやソフトウェアのこと。`},
{target:`☆アプリケーションサーバー`, content:`Webサーバー上でアプリケーションを実行するためのソフトウェアのこと。<br>Webアプリで動的に処理を変える場合など、実行した結果をWebサーバーに返す。`},
{target:`デバイスドライバ`, content:`ハードウェアを操作するソフトウェア。<br>パソコンに接続している周辺機器などのハードウェアをパソコン側から制御するためのソフトウェア。`},
{target:`☆BIOS（Basic Input/Output System）`, content:`パソコンの電源が入った時に、接続されているCPUやメモリ、ビデオカードなどのハードウェアを制御するプログラム。<br>OSが起動するより前に使われる。`},
{target:`ベンチマーク`, content:`ハードウェアやソフトウェアの性能を評価する基準。<br>複数のコンピュータで性能の違いを比較するために使われる。システム全体としての処理時間を測定するだけでなく、CPUやメモリ、ハードディスクなど機器ごとに数値化した性能を比較するために使われる。`},
{target:`SPEC（Standard Performance Evaluation Corporation）`, content:`公平で有用なベンチマークを実施するために、ベンチマークの指標を作成している非営利の団体。<br>CPUや仮想化環境などさまざまな指標が公開されている。`},
{target:`3DMark`, content:`パソコンのグラフィック性能を調べるために使われるソフトウェア。`},
{target:`アドベントカレンダー`, content:`12月にエンジニアが投稿するブログのバトン。<br>ITエンジニアが毎日交代でブログなどに記事を投稿する規格を指すことも多い。`},
{target:`形態素解析`, content:`意味のある最小限の単語などに分割して品詞を分析。<br>自然言語の分を意味ある最小限の単語に分割し、その品詞などを分析すること。日本語の場合、単語と単語をコンピュータが判断して区切ることは難しいが、様々な辞書やツールが開発されている。`},
{target:`ワードクラウド`, content:`単語の出現頻度などをもとに、よく登場する単語は大きく表示すること。<br>文章における単語の特徴を調べる方法。見た目がカラフルになり、見ているだけでも楽しい。`},
{target:`ワードサラダ`, content:`適当に単語を並べてできる文章のこと。<br>文法は正しいが意味は通らない。迷惑メールの作成などランダムに単語を並べて文章を生成する方法が使われる。`},
{target:`MeCab`, content:`日本語の形態素解析によく使われるツール。<br>単体でも実行できるが、プログラミング言語から使用できるだけでなく、辞書を自由に変えて形態素解析できる。`},
{target:`正規化`, content:`データの規則性に注目して整理。<br>データを利用しやすいように成形すること。関係エータベースの場合、データの冗長性を排除し、データの不整合が起きにくくするために実施され、「第1正規化」、「第2正規化」、「第3正規化」、「ボイスコッド正規化」などがある。正規化されたデータベースで、データを更新する時は1箇所だけど更新すればよく、多くの場合、全体のデータ量が減る。`},
{target:`正規表現`, content:`複数の文字列を1つのパターンで識別する表現方法。<br>指定した条件に合致するかを調べるために使われる。`},
{target:`メタ文字`, content:`正規表現の中で特別な意味を持った文字。<br>ドットは任意の1文字と、縦棒は複数の中のいずれかとマッチすることを意味する。`},
{target:`トラフィック`, content:`一定期間内にネットワーク上を通過するデータ量。`},
{target:`スループット`, content:`単位時間あたりに処理できる量のこと。<br>ネットワークの場合は単位時間あたりに実施に通信したデータ量のこと。`},
{target:`帯域（帯域幅）`, content:`単位時間あたりに送れる情報量のこと。<br>道路の広さに例えられるように、周波数の範囲を意味することも多い。`},
{target:`転送量`, content:`サーバーなどが送り出したファイルの量に対して使われることが多い。`},
{target:`トリガー`, content:`コンピュータが動作を開始するきっかけ。<br>データベースの場合はデータの登録や削除などが該当し、この時に何らかの処理を実行するように設定できる。`},
{target:`イベント`, content:`プログラムの内部で発生した出来事。<br>ボタンを押された、キーボードから何か入力された、などのイベントが発生するとプログラムが何らかの応答を行う。`},
{target:`割り込み`, content:`周辺機器などから受け取る要求。<br>プログラムで実行中の処理があった場合も、優先順位が高い割り込みがあれば、その処理を受け付けて処理する必要がある。`},
{target:`コールバック`, content:`ある処理を実行する時、処理の途中で別の処理を実行するように指定する手法。<br>用意されている処理の中で、任意の処理を実行できるようになる。`},
{target:`★システム開発や実行環境の構築で使われるIT用語`, content:`ーーーーー`},
{target:`☆Docker`, content:`コンテナ型の仮想化プラットフォーム。<br>仮想化したハードウェアの中でOSやアプリケーションを実行するのではなく、Linuxカーネルが持つ「コンテナ」という機能を使ってアプリケーションを仮想的な環境で実行させるプラットフォーム。他のプロセスやコンテナから分離されており使いたいアプリケーションとは無関係な処理が動いていないため、無駄が少ない。`},
{target:`Docker Hub`, content:`Dockerコンテナを共有するために公開された場所（レジストリ）。<br>多くのコンテナをダウンロードできるだけでなく、アップロードして公開できる。`},
{target:`Dockerfile`, content:`Dockerのコンテナを生成するための設定ファイル。<br>テキストファイルなのでテキストエディタなどで編集できる。この内容に沿ってコンテナが作られる。`},
{target:`Docker Compose`, content:`複数のコンテナで構成されるアプリケーションを作るとき、関連するコンテナの起動や停止を個別に実行するのではなく、まとめて実行できるツール。`},
{target:`Kubernetes`, content:`コンテナ単位でアプリを自動的に管理する基盤。<br>Dockerなどのコンテナ型の仮想化プラットフォームで、複数のコンテナの操作を自働化するソフトウェア。コンテナの稼働状況の管理や負荷分散、自動配置などの機能を備えており、稼働中のアプリの規模を容易に拡大できる。また、マイクロサービス化の推進によりアプリケーションの迅速な開発につながる。k8sと略されることも多い。`},
{target:`Pod`, content:`Kubrenetesでアプリケーションをデプロイする単位。<br>複数のコンテナを1つにまとめて管理することで、サービスの起動や停止をまとめて実行できる。`},
{target:`ローリングアップデート`, content:`ソフトウェアのバージョンアップなどの更新時に、複数のコンピュータで稼働中のシステムを完全に停止することもなく、少しずつ新しいものに入れ替えること。`},
{target:`Minikube`, content:`ローカル環境で簡単にKubernetesの環境を実行するためのツール。<br>仮想環境で動作し、アプリケーションの開発やテストの環境として使われる。`},
{target:`☆WSL（Windows Subsystem for Linux）`, content:`Windows上でLinuxをネイティブに実行する仮想環境。<br>Windowsの中でプロセスの1つとしてLinuxを実行する仕組み。仮想マシンとしてLinuxを実行することと比べ、OSを起動する時間が無く不要なプロセスなどが動いていないため、高速に動作する。ほとんどのLinuxアプリケーションがそのまま動作するだけでなく、WindowsとLinux間で相互のファイルにアクセスできる。`},
{target:`Hyper-V`, content:`ハードウェアを仮想化し、Windows上の仮想マシンとして複数のOSを実行できる仕組み。`},
{target:`Cygwin`, content:`Windows上でUNIXに似た環境を提供するフリーソフトウェア。<br>WSLが登場するまでは、UNIX用のソフトウェアをWindows上で実行するためによく使われた。`},
{target:`☆エミュレーター`, content:`特定の環境で動作するソフトウェアを、異なる環境で疑似的に動作させる手法。<br>古い環境で使っていたソフトウェアを新しい環境で動かすために使われることが多い。`},
{target:`スケーラビリティ`, content:`負荷に応じてシステムを拡張。<br>ハードウェアやソフトウェアなどを柔軟に拡張できること。`},
{target:`オートスケール`, content:`想定した負荷を超えた時に、自動的にサーバーを追加するなど、使用率などに合わせて自動的に拡張すること。<br>突発的なアクセス集中に自動的にサーバーを増減して対応できる。`},
{target:`パブサブ（Pub/Sub）`, content:`パブリッシュとサブスクライブの略で「出版-購読型」と訳される構成。<br>非同期にメッセージをやり取りすることで、結合度が低いためスケーラビリティに優れる。`},
{target:`ロードシェア`, content:`同じ機器を複数用意して処理を静的に振り分け、負荷を分散する手法。`},
{target:`ロードバランサ`, content:`同じ機器を複数用意して処理を動的に振り分け、負荷を分散する手法。`},
{target:`ハイパーバイザー`, content:`仮想化環境を構築するための制御ソフトウェア。<br>物理的なコンピュータの中に、仮想的なコンピュータを作って実行するためのソフトウェア。OS上で仮想マシンを動かすホスト型仮想化ではなく、OSを必要とせずにハードウェア上で直接動作するため、ホスト型仮想化よりも性能の劣化が少ない。仮想的なコンピュータを構築し、管理制御するソフトウェアを指すことが多い。`},
{target:`完全仮想化`, content:`現実のハードウェアとのやり取りをソフトウェアで実現すること。<br>一般的なOSを何も変更することなく実行させる技術。処理速度は少し低下する。`},
{target:`準仮想化`, content:`仮想環境で高速に動作させるために、一般のOSの一部を修正してインストールする技術。<br>性能は高いが、ソースコードが公開されていないOSは実行できない。`},
{target:`P2V（Physical to Virtual）`, content:`物理サーバーで稼働しているシステムを仮想サーバーに移行すること。<br>専用のツールで自動的に変換できるため、再インストールや環境設定は不要なことが多い。`},
{target:`シンプロビジョニング`, content:`ストレージを仮想化して大容量を扱えるようにする。<br>実際のストレージ容量に関わらず、見た目上の容量を仮想的に増やし、利用効率を高めること。仮想化により、求められる容量を満たしながら、最小限のストレージを準備するだけで済む。`},
{target:`キャパシティ・プランニング`, content:`対象のシステムに求められる需要を考えた時に必要な性能やディスク容量などを見積もって、最適な構成を考えること。<br>最大の能力を指すことが多い。`},
{target:`デデェプリケーション`, content:`重複排除とも呼ばれ、重複データを除外してストレージの空き容量を増やす機能のこと。`},
{target:`オーバーコミット`, content:`物理的に利用可能な容量を超えたリソースをゲストの仮想マシンに割り当てること。<br>CPUやメモリ、ストレージなどを割り当てる機能を指す。`},
{target:`☆リファクタリング`, content:`外部から見た動作を変えずに内部構造を洗練。<br>ソフトウェアの開発において、外部から見た時の動作を変えずに、プログラムの内部構造を変更し、保守性や効率性を高めること。`},
{target:`☆KISSの法則（Keep It Simple, stupid）`, content:`シンプルな状態を保つことを意味する言葉。<br>複雑になればなるほど不具合などが埋め込まれる可能性が高まり保守も難しくなることを指す。`},
{target:`☆YAGNI原則（You Ain't Gonna Need It）`, content:`開発時点で必要のないものは実装しないこと。<br>あると便利な機能でも、実際に使われないと意味が無いことから、必要になってから開発することを示す格言。`},
{target:`☆DRY原則（Don't Repeat Yourself）`, content:`同じ処理をするプログラムを複数の場所に書くのではなく、1箇所にまとめておくべきだという考え方。<br>変更が発生した場合に、1箇所だけ修正すればよくなる。`},
{target:`ガーベジコレクション`, content:`不要になったメモリ領域を解放する機能。<br>プログラム実行中に使われなくなったメモリ領域を開放する機能のこと。不要なメモリ領域を自動的に開放する機能を多くのプログラミング言語が備えている。`},
{target:`メモリコンパクション`, content:`メモリの確保と開放が繰り返された結果、メモリの空き領域に断片化が発生した時に、空き領域を再配置する機能。`},
{target:`アジャイル`, content:`要件定義からリリースまでを短期間に繰り返す手法。`},
{target:`ウォーターフォール`, content:`要件定義から設計、実装、テスト、リリースという流れで開発する手法。`},
{target:`☆ユーザーストーリー`, content:`顧客や利用者の目線でソフトウェアの要件を簡潔に記述したもの。<br>利用者が得られる価値を書くことで、顧客目線での方向性を表す。`},
{target:`プランニングポーカー`, content:`開発工数の見積もりを行う時にトランプのカードのようなモノを使い、チームのメンバーがそれぞれ考える相対的な工数を出して、妥当な工数を決める手法。`},
{target:`☆スクラム`, content:`優先順位が高いものから動くソフトウェアを作る。<br>アジャイル開発で使われる手法の1つで、ソフトウェアの開発をスプリントと呼ばれる短期間で区切り、その期間内で設計や実装、テストなどを繰り返す。`},
{target:`デイリースクラム`, content:`朝会と呼ばれることも多い、毎日実施されるイベント。<br>前日にやったことや当日にやること、現在抱えている問題点などについて報告し、再計画する。`},
{target:`プロダクトバックログ`, content:`機能や要求、要望、修正などそのソフトウェアの開発に必要なものを抽出したリスト。<br>順番は実現した時の価値などで並べ、定期的に見直される。`},
{target:`スクラムマスター`, content:`スクラムの進行役。<br>チーム全体として協力して開発ができているか管理し、プロダクトオーナーと連携してプロジェクトを円滑に進める役割を果たす。`},
{target:`☆スパイラル`, content:`設計とプロトタイプの作成を繰り返す開発手法。<br>試作品を確認することで依頼者もイメージを確認しながら開発を進められる。フィードバックを反映するため、顧客のニーズを反映した高品質なものの開発につながる。ただし、依頼者の要望が多くなると、試作品ばかりを作ることになり、期間内に完成しない可能性もある。`},
{target:`プロトタイピング`, content:`いきなり完成品を作るのではなく、最低限の試作品を作って、利用者の要求や評価を反映しながら開発を進めること。`},
{target:`インクリメンタルモデル`, content:`求められる機能を小さな単位に分割し、それぞれについて重要な部分から優先して完成させ、残りを追加機能として順次リリースしていく開発モデル。`},
{target:`イテレーティブモデル`, content:`ソフトウェアの全体について最初は広く浅く作って、少しずつ肉付けしていく手法。<br>全体像を最初からイメージでき、変化を感じながら完成度が高まる。`},
{target:`☆イテレーションとスプリント`, content:`アジャイル開発での開発サイクル。<br>いずれも設計、開発、テスト、改善というサイクルを短期間（1週間から1カ月程度の間）に繰り返すこと。仕様変更などが発生しても速やかに対応できるだけでなく、目の前にある目標に対して全員が高い緊張感を持って対応できるメリットがある。イテレーションは主にXPで、スプリントは主にスクラムで使われる。`},
{target:`XP（Extreme Programming）`, content:`変更の発生は当然だと考えて、変更に積極的に対応する開発手法。<br>ソースコードを重視し、ペアプログラミングやコードレビューでコードを継続的にレビューする。`},
{target:`スプリント計画`, content:`プロダクトバックログの上位から今回のスプリントでの項目を選び、そのスプリントでの目標、作業の実行計画を立てること。<br>チームとして作業量を調整する。`},
{target:`スプリントレビュー`, content:`スプリント終了時に成果を確認する場。<br>プロダクトバックログの項目の追加や削除、順番の入れ替えなどにより、プロジェクトの価値を最大化できるように修正する。`},
{target:`☆リーンスタートアップ`, content:`無駄なく意思決定するために仮説検証を繰り返す手法。<br>仮説検証を繰り返しながら進める開発手法。最小限のコストで開発して速やかにリリースし、顧客の反応を見て改善を繰り返すことで、需要に合わない製品やサービスが作られてしまうことを防ぐ。また、早く市場に出すことで、市場における認知度を高められるメリットがある。`},
{target:`☆MVP（Minimum Viable Product）`, content:`実用最小限の製品。<br>サービスや製品についてアイデアや仮説を本当に欲しがる人がいるかを検証するため、最低限の機能だけを備えた製品を作ること。`},
{target:`FDD（Feature Driven Development）`, content:`ユーザー機能駆動開発。<br>顧客や利用者にとっての機能価値を重視する開発手法。ビジネス目線で必要な機能を洗い出し、反復的に開発を繰り返す。`},
{target:`RUP（Rational United Process）`, content:`組織やプロジェクトごとにカスタマイズして使うことを前提にした開発手法。<br>ユースケースと呼ばれるシステムの振る舞いを中心に考え、反復型で開発を進める。`},
{target:`☆ビルド`, content:`ソースコードから実行ファイルを生成。<br>C言語やJavaなどのコンパイラ型の言語で、ソースコードを作成した後に行うコンパイルやリンクといった作業のこと。複数のソースコードのコンパイルが必要な場合、このツールを使うことで、複雑な手順を自働化できる。変更していないソースコードはコンパイル作業を実施しないことで、コンパイル時間を短縮できる。`},
{target:`make`, content:`自動的に実行する処理を記述したMakefileというファイルを作成すること。<br>複雑な手順でもこのコマンドで実行できるようになるツール。`},
{target:`Ant`, content:`Javaの開発でよく使われるビルドツール。<br>多くのJava開発ツールで標準的に使われるが、最近では後継のMavenやGradleも多く使われる。`},
{target:`Bazel`, content:`Googleが開発したビルドツール。<br>さまざまな言語や環境に向けたルールがあらかじめ用意されている。並列処理に優れ、ビルド時間を短縮できる。`},
{target:`☆デプロイ`, content:`配置するとの意味で、開発したソフトウェアを利用者が使える状態にすること。<br>Webアプリの場合は、Webサーバーに配置し、設定することで使える状態になる。テスト用の環境に配置することも指す。利用者に公開し、実際に使ってもらうことはリリースという。`},
{target:`プロビジョニング`, content:`ネットワークやサーバーに必要なソフトウェアを導入したり、適切に設定したりして使える状態にすること。<br>需要に合わせて準備しておくことも含まれる。`},
{target:`スナップショット`, content:`ある時点でのファイルやデータベースなどの状態を丸ごと保存したもの。<br>簡単に複製でき、他の環境に移しても、まったく同じ状況を再現できる。`},
{target:`☆テスト駆動開発（TDD）（Test-Driven Development）`, content:`テストコードを事前に用意して開発を進める手法。<br>実現したい仕様をテストコードとして記述しておくことで、実装したコードがテストを満たしているかチェックしながら開発を進め、不具合を作りこむことを防ぐ。テストコードが成功しているか失敗しているか判断する作業を自働化するために、単体テストツールがよく使われる。`},
{target:`ペアプログラミング`, content:`2人以上のプログラマが1つのコンピュータを使って共同でプログラムを作成する方法。<br>同時に作業をすることで他者の意見を取入れ、質を高める効果がある。`},
{target:`WBS（Work Breakdown Structure）`, content:`タスクを細分化して木構造に整形。<br>多くなプロジェクトを小さな単位（タスク）に分割し、実施すべき作業を明確にしたもの。大・中・小のように分けた木構造で表現することが多い。工数や担当者、納期などを一覧にでき、抜けや漏れを防ぐことにもつながる。プロジェクトの進行状況を管理するため、ガントチャートと合わせて使用することも多い。`},
{target:`EVM（Earned value management）`, content:`WBSのような時間ではなく、コストをグラフにして表現する手法。<br>計画に対する実績値とのズレを調べることで、完成までのスケジュールの予測にも使われる。`},
{target:`☆ガントチャート`, content:`タスクの開始・終了時期や工数、担当者などを割り振って時系列に並べて表現する図。<br>作業の計画を棒グラフのように表現する方法が使われる。`},
{target:`マインドマップ`, content:`頭の中で考えていることを少しずつ広げながら表現することで、思考を整理したり新たな発想を出したりする手法。<br>WBSを作成する時に役立つことが多い。`},
{target:`UML（Unified Modeling Language）`, content:`オブジェクト指向分析・設計のための記法。<br>オブジェクト指向での設計や開発において、統一した書式で表現するためのモデリング言語。文章で書くのではなくわかりやすい図で表現することで、発注者と開発者、または開発者同士での認識の相違が発生することを防ぐ。プログラミング言語に関係なく使えるため、記法の意味を覚えればプログラミングについての知識が無くても読み取れる。`},
{target:`☆フローチャート`, content:`処理の流れを表現する図で、JISで定められた標準規格。<br>プログラムの処理を表現するだけでなく、業務フローの記述にも使われる。`},
{target:`☆ER図（Entity Relationship Diagram）`, content:`データベースの設計において、テーブル間の関係などを表現する図。<br>1対1、1対n、n対nなどの多重度を直感的に表現でき、頭の中を整理できる。`},
{target:`☆DFD（Data Flow Diagram）`, content:`情報システム全体として、データがどのように流れていくかを表現する図。<br>データの流れと処理を把握することで、システムの機能を洗い出すために使われる。`},
{target:`☆ドメイン駆動設計（DDD）（Domain-Driven Design）`, content:`顧客と開発者が共通の言葉を使って設計する手法。<br>発注者と開発者が共通の言葉でソフトウェアのシステムを設計し、モデル化したものをそのままコードとして実装するような設計手法のこと。システムの内容を理解できない発注者と業務知識が無く顧客のビジネスを知らない開発者の間でも共通の理解が得られるだけでなく、機能の実現が容易になり開発速度の向上も期待できる。`},
{target:`値オブジェクト`, content:`文字列型や整数型といった標準的な型を使用せず、商品名クラスや金額クラスを作ることで言葉とソースコードを一致させたもの。`},
{target:`SOLID原則`, content:`単一責任の原則、解放閉鎖の原則、リスコフの置換原則、インターフェイス分離の法則、依存性逆転の原則の略。<br>わかりやすいソースコードを書くガイドライン。`},
{target:`単一責任の原則`, content:`クラスは単一の機能に対する責任を持ち、その機能に関する変更理由が1つだけになるように設計すること。<br>コードの保守性と理解しやすさを高める。`},
{target:`開放閉鎖の原則`, content:`ソフトウェアは既存のコードを修正せずに、新しい機能を追加できるように設計する。<br>システムの安定性を保ちながら、柔軟に機能を拡張できる。`},
{target:`リスコフの置換原則`, content:`子クラスは親クラスと互換性を持ち、親クラスの代わりに子クラスを使っても、プログラムの正しい動作を保証する。<br>コードの再利用性と拡張性が向上する。`},
{target:`インターフェイス分離の法則`, content:`クライアントが使用しないメソッドを持つ大きなインターフェイスを避け、特定の機能に絞った小さなインターフェイスを設計する。<br>システムの柔軟性と保守性が向上する。`},
{target:`依存性逆転の原則`, content:`高レベルモジュールが低レベルモジュールに依存するのではなく、両者が共通の抽象（インターフェイス）に依存するように設計する。<br>システムの柔軟性とテスト容易性を向上させる。`},
{target:`RDRA（Relationship Driven Requirement Analysis）`, content:`要件定義で使われる手法。<br>システム化の対象範囲を決めるために、システムを取り巻く外部環境や接点に注目し、要求される機能やデータと関連付けることが特徴。`},
{target:`クリーンアーキテクチャ`, content:`部品の依存を一方向にするソフトウェアの設計手法。<br>仕様変更などが発生した時に影響範囲を最小限に抑えることを目的にするソフトウェアの設計手法の1つ。ソフトウェアを開発する時に、その構成する部品をレイヤーとして考え分離し、その依存関係を一方向にして管理する手法で、同心円状の図がよく使われる。インターフェイスを統一することで疎結合にでき、テストも実施しやすくなる。`},
{target:`依存性の注入`, content:`あるクラスが別のクラスに依存していると変更が発生した場合に双方の修正が必要なため、関連付けを設定ファイルで行い、プログラム内での依存関係を排除すること。`},
{target:`レイヤードアーキテクチャ`, content:`ソフトウェアの開発において、各モジュールを責務によって分割し依存関係を少なくする手法。`},
{target:`オニオンアーキテクチャ`, content:`ソフトウェア設計のパターンの一つで、依存関係を整理しやすくする。<br>中心にドメイン（ビジネスロジック）があり、外側に向かってインフラストラクチャやユーザインターフェースなどの層が広がる。各層は内側の層に依存し、逆はない。これにより、システムの柔軟性とテストの容易さが向上する。`},
{target:`インピーダンスミスマッチ`, content:`データ構造やプログラミングパラダイム間のズレ。<br>プログラムがオブジェクト指向で保持しているデータを、データベースでうまく表現できない状況などを指す。`},
{target:`CI/CD（Continuous Integration/Continuous Delivery）`, content:`ソフトウェアの開発プロセスを自働化。<br>継続的インテグレーションは、ソースコードをコミットするとビルドやテストが自動的に実行され、失敗した時に即時フィードバックされる方法。不具合を作りこんだ時に問題が発覚するまでの時間を短縮でき、原因の調査が容易になる。また、継続的デリバリーは、ソフトウェアをいつでもリリースできる状態にしておくこと。`},
{target:`ブルーグリーンデプロイ`, content:`継続的デリバリーから派生したデプロイの方法。<br>本番環境（ブルー）を新しい環境（グリーン）に即時切り替えることでサーバーのダウンタイムをゼロにすること。`},
{target:`カナリアリリース`, content:`新しいバージョンのソフトウェアをリリースする時、これまでのバージョンも並行して稼働し、一部の利用者だけ新しいバージョンを使用させて検証すること。`},
{target:`RFP（Request For Proposal）`, content:`提案依頼書。<br>ソフトウェアで実現する範囲を文書で決定。顧客がシステム化にあたって求める要望や、課題に感じていることを整理した文書。この内容に従って、費用面なども考慮したうえで、実現する範囲を顧客と調整して決定する。実現する品質や範囲を決めておかないと、要望が後から追加されて開発が終わらなくなるため、ソフトウェア開発において重要な文書である。`},
{target:`☆要求分析（要求定義）`, content:`機能要件や非機能要件を含めて、どのようなことを実現したいか、実現できなければ困ることは何か、という顧客側の視点で要求を整理すること。`},
{target:`☆要件定義`, content:`実現する機能や性能といった品質や、開発する範囲などを含め、システムが何をしなければいけないか、何が必要かを開発側の視点でまとめること。`},
{target:`RFI（Request For Information）`, content:`情報依頼書。<br>業務委託や入札を行う時に相手を比較するため、その会社の会社情報や実績、製品のカタログなどの情報提供を依頼する書類のこと。`},
{target:`IaC（Infrastructure as Code）`, content:`インフラの構成をコードで記述。<br>サーバーやネットワークといったインフラを自動的に設定するために、ソースコードや設定ファイルによって記述する方法。`},
{target:`Ansible`, content:`Pythonで作られたインフラ構築の自動化ツール。<br>対象のサーバーにエージェントなどをインストールすることなくソフトウェアのインストールや設定が可能。`},
{target:`Chef`, content:`Rubyなどで作られたサーバー設定ツール。<br>対象のサーバーにエージェントを導入し、管理サーバーから設定情報を取得して、インストールや設定を行う。`},
{target:`☆冪等性（べきとうせい）`, content:`同じ操作を何度も繰り返しても、同じ結果が得られること。<br>誤って再実行してもファイルが二重に作られたりすることなく、誰がやっても同じ設定を再現できる。`},
{target:`FPGA（Field Programmable Gate Array）`, content:`現場でプログラミング可能な集積回路。<br>自由に書き換えられる集積回路。内部の構成を購入後に自由に変更できる集積回路のこと。専用の処理を書き込むことで高速に処理できる。`},
{target:`HDL（Harware Description Language）`, content:`FPGAなどの設計で使われるハードウェア記述言語。<br>プログラミング言語のように数式や条件分岐などを書ける。`},
{target:`3D-MID（3-Dimentional Modeled Interconnect Device）`, content:`3次元成形回路部品。<br>2次元の配線よりも部品点数を削減でき、軽量化や低コスト化につながる。`},
{target:`アーキテクチャ`, content:`ハードウェアやソフトウェアの設計思想。`},
{target:`x86`, content:`Intel社のCPUのアーキテクチャで、8086、80286といった製品シリーズ名。<br>このCPUの命令セットと互換性があれば、他社の製品を含むこともある。32ビットのCPU命令セット。`},
{target:`x64`, content:`64ビットのCPU命令セットのアーキテクチャで現在の主流。`},
{target:`プログラミングパラダイム`, content:`プログラミング言語が設計された考え方。<br>手軽に作りたい、処理速度を追求したい、大規模なプログラムでも保守しやすい、など様々な考え方がある。`},
{target:`☆デザインパターン`, content:`ソフトウェアの設計ノウハウ集。<br>開発者がよく出会う問題とそれに対する良い設計を整理したもの。再利用しやすい設計を効率よく再現できる。有名なものにGoFのデザインパターンがある。`},
{target:`☆コーディング規約`, content:`プロジェクト内でのソースコードの記述ルールのこと。<br>プログラムの保守性と品質を高めるために決められている。`},
{target:`GoF（Gang of Four）`, content:`4人の開発者によって定められた23種類のデザインパターンのこと。<br>オブジェクト指向開発でよく使われている。`},
{target:`アンチパターン`, content:`ソフトウェアの開発でよくある失敗や、避けるべき事例。<br>読み解くのが大変なスパゲティと呼ばれるソースコードや、長い処理を詰め込んだ関数などを指す。`},
{target:`☆フレームワーク`, content:`多くのソフトウェアで使われる土台。<br>ソフトウェアの開発やデザインなどで使われる、多くのソフトウェアで使われるような一般的な土台として用意したもの。開発者はその土台の上で個別の機能を実装するだけでよいため、開発効率の向上が期待できる。一方で、同じフレームワークを使っているものは外観や動作が似ており、開発者はオリジナリティを発揮しにくい。`},
{target:`☆scaffold`, content:`フレームワークが用意している機能。<br>多くのアプリケーションで使われる処理のひな型となるソースコードを自動的に生成でき、開発にかかる時間の短縮につながる。`},
{target:`SDK（Software Development Kit）`, content:`ライブラリだけでなく、サンプルコードやドキュメントなどをひとまとめにして提供しているもの。<br>プログラミング言語やOSの開発元が提供している。`},
{target:`スレッドとプロセス`, content:`ソフトウェアがCPUを利用する単位。`},
{target:`CPUコア`, content:`1つのCPUの中で実際に処理する部分。<br>最近では複数のコアを搭載しているCPUが多い。コアの数だけ、同時に複数の処理を実行できる。`},
{target:`マルチスレッド`, content:`プロセスの中で複数のスレッドを並行して実行すること。<br>長時間の処理を実行するとき、メインのスレッドとは別のスレッドを使うことで、応答性が向上する。`},
{target:`ミューテックス`, content:`複数のスレッドやプロセスの間で排他制御や同期を実装する時に使われる技術。<br>複数のプロセスが同時に起動することを防ぐために使われることもある。`},
{target:`☆イミュータブル`, content:`後で状態を変えられないもの。不変性。<br>プログラムの場合、変数に代入したオブジェクトの中身を変更できないものを意味する。`},
{target:`イミュータブル・インフラストラクチャー`, content:`サーバーを構築した後、バージョンアップや更新プログラムを適用しない手法。<br>新たな環境を構築しておき、切替えて使う。`},
{target:`副作用`, content:`想定される処理が行われるだけでなく、他に影響が出ること。<br>例えば、関数やメソッドを実行した時に、状態を管理する変数やオブジェクトの内容が変わること。`},
{target:`参照透過性`, content:`同じ入力を与えたら、必ず同じ結果が得られること。<br>関数の他の変数などによって結果が変わらないため、テストが容易になるなどのメリットがある。`},
{target:`オープンソース（OSS）（Open Source Software）`, content:`ソースコードが無料で公開されているソフトウェア。<br>利用や改変、再配布が自由に許可されているソフトウェアのこと。世界中の開発者が不具合の修正や機能追加に参加できるため、貢献する人が増えると機能や品質が高まる。さらに無料で利用できることから利用者が増えることで、より使いやすいソフトウェアになることが多い。`},
{target:`ライセンス`, content:`OSSの利用や改変、再配布など、従う必要がある規約。<br>代表的なものにGPL（GNU General Public License）やBSD License、MIT Licenseなどがある。`},
{target:`コピーレフト`, content:`著作者が著作権を保持したままで、著作物の配布条件が変更されない限り、複写や改変、再配布といった権利を利用者に与える考え方のこと。`},
{target:`プロプライエタリ`, content:`オープンソースと反対の意味で、ソースコードやプログラムの所有権を主張して利用者の権利を制限すること。<br>ソースコードは公開せず、バイナリのみ配布される。`},
{target:`DevOps（Development Operations）`, content:`開発から保守まで一貫して対応。<br>開発者と運用担当者が密に連携することで、柔軟かつスピーディーにシステムを開発することや組織としての文化のこと。顧客のニーズに速やかに対応するだけでなく、エンジニアも幅広いスキルを身に着けることができる。`},
{target:`QA（Qualitiy Assurance）`, content:`品質保証。<br>システム開発などにおいて、レビューやテストなどによって、その性能や機能の品質を保証すること。`},
{target:`ITIL（Information Technology Infrastructure Library）`, content:`ITサービスマネジメントにおける成功事例を集めたもの。<br>より良いITシステムの開発や運用のテンプレートとして使える。`},
{target:`SRE（Site Reliability Engineering）`, content:`信頼性を高めるため自働化などにも取り組むインフラ担当者。<br>サイト信頼性エンジニア。システムの運用を支え、システム全体の信頼性を向上させるエンジニアのこと。インシデント管理や厚生管理などのシステム管理にツールを導入して自働化するなど、企業が抱える多くのサーバーやネットワーク機器などのシステムを効率よく管理できるようにする。開発部門とインフラ部門との橋渡しの役割も果たす。`},
{target:`CRE（Customer Reliability Engineer）`, content:`顧客の信頼性を高めるエンジニアのこと。<br>顧客からの問い合わせについての原因の調査や、カスタマーサポート担当者が使うシステムの開発などを行うことが多い。`},
{target:`トイル（Toil）`, content:`自働化しようとしても、どうしても最後まで手作業が残ってしまう部分。<br>何度も実行する作業であり、ゼロにするのは難しいが、可能な限り減らすことが重要。`},
{target:`エラーバジェット`, content:`問題が発生しても許容できる数。<br>ミスやエラーをゼロにすることを目指すと新しいことに挑戦しなくなるため、許容できる範囲を決め、その範囲内で挑戦する。`},
{target:`SoE（System of Engagement）`, content:`システム設計の方向性。<br>主に社外向けで利用者の目線で開発された、利用者が中心の情報系システムで、利用者に活用されることが重要である。`},
{target:`SoR（System of Record）`, content:`システム設計の方向性。<br>社内向けで情報の蓄積などを目的とした、データの記録が中心の基幹系システムで、正確に記録できることが重要である。`},
{target:`システムインテグレーター`, content:`企業が使うシステムの全体を考慮し、設計から開発、運用を担当する企業のこと。<br>Sler（エスアイヤー）と呼ばれる。システムの安定稼働が求められる。`},
{target:`Sol（System of Insight/Inteligence）`, content:`ビックデータやAIなどを活用し、データ分析の基盤となる部分のこと。<br>分析して得られた結果でSoEやSoRを支援する役割が期待されている。`},
{target:`クラスタ`, content:`多くのコンピュータの集まり。<br>多数のコンピュータで分散して並列処理を行うことで、スーパーコンピュータのような性能を安価に実現できる。CPUやメモリ、通信速度などのバランスを考えるだけでなく、並列計算を意識したプログラムを作ることが求められる。`},
{target:`HPC（High Performance Computing）`, content:`高性能計算。<br>大規模で高性能なコンピュータを使って、シミュレーションなどの膨大な量の計算を必要とする処理を行うこと。`},
{target:`GPUクラスタ`, content:`最新のGPUを搭載したコンピュータでクラスタを作成し、注目を集めている機械学習などで非常に高速な計算ができる構成のこと。`},
{target:`グリッドコンピューティング`, content:`インターネットなどにあるコンピュータを結び付け、1つのコンピュータとしてサービスを提供する仕組み。<br>空いているリソースの有効活用につながる。`},
{target:`マイグレーション`, content:`異なる環境への移行。<br>プログラムやデータなどを新しい環境に移行すること。`},
{target:`リプレース`, content:`これまで使っていたシステムを新しい環境や同等の機能を持った別のシステムに入れ替えること。`},
{target:`レガシーマイグレーション`, content:`メインフレームなど時代遅れになったシステムを最近の環境に移行すること。<br>COBOLなどのプログラミング言語で書かれたシステムを移行することが多い。`},
{target:`ライブマイグレーション`, content:`あるコンピュータ上で動作している仮想マシンを、実行したまま他のコンピュータに移すこと。<br>ハードウェアの保守や新機種への更改でも処理を止めずに移行できる。`},
{target:`クロスプラットフォーム`, content:`異なる環境でも動かせるように開発。<br>異なるハードウェアやOSでも同じプログラムをそのまま実行できること。また、同じソースコードからそれぞれのOSなどに合わせた実行ファイルを生成できるようなツールや開発手法を指すこともある。`},
{target:`バイトコード`, content:`実行環境のOSやCPUに関係なく作成された中間コード。<br>環境に合わせて作成する必要が無く、実行時には機械語に変換しながら実行される。`},
{target:`JIT方式（Just In Time）`, content:`何度も実行される場合に備えて1回目に内部でコンパイル処理を行う方式。<br>スクリプト言語で作成されたWebアプリなど、2回目以降は高速に実行できる。`},
{target:`ハッカソン`, content:`開発に没頭するイベント。<br>プログラマやデザイナーなどが集まってチームを作り、短期間で集中的にソフトウェアを開発するイベント。ハック（hack）とマラソン（marathon）を合わせた造語で、決められた期間内に開発してその成果を競う。異なる職種が集まることで新しいアイデアが生まれ、ゼロから開発することで新しい技術を学ぶこともできる。`},
{target:`マッシュアップ`, content:`複数のサービスや情報を組み合わせて加工し、新たなサービスとして提供すること。<br>欲しい情報を何度も検索しなくても、1度で情報が得られるメリットがある。`},
{target:`メイカーズムーブメント`, content:`デジタル技術を使ったモノづくりのこと。<br>第3の産業革命とも言われる。3Dプリンタなどの機会の登場で、手軽にモノづくりができることから広がっている。`},
{target:`静的解析`, content:`プログラムを実行せずにチェックする手法。<br>ソースコードに含まれる誤りを診断する作業。人間が目視でチェックすることをコードインスペクションという。プログラムを実行することなく様々な問題を発見するため、テストより前の段階で検証できる。誤りを早い段階で見つけることから手戻りを防いで影響を最小限に抑えるために行われる。`},
{target:`リバースエンジニアリング`, content:`ソースコードが非公開のソフトウェアなどの実行ファイルを解析して、技術情報を調べること。<br>マルウェアの動作の解析などセキュリティ面で使われることもある。`},
{target:`メトリクス`, content:`ソースコードの規模や複雑さ、保守性などを定量的に数値で示す指標。<br>複雑さの指標として、凝集度や結合度、サイクロマティック複雑度などがある。`},
{target:`ウォークスルー`, content:`印刷したソースコードを手作業で点検すること。<br>欠陥を見つけるために成果物をチェックする意味で使われることが多い。`},
{target:`カバレッジ`, content:`テストの網羅率を測定する時の指標。<br>網羅性の尺度として使われる値で、ソフトウェアのテストにおいては品質を高めるための努力目標として使われる。すべての命令を実行したかを調べるC0（命令網羅）、すべての分岐を実行したかを調べるC1（分岐網羅）、すべての組合せを少なくとも1回実行したかを調べるC2（条件網羅）がある。`},
{target:`ホワイトボックステスト`, content:`ソースコードの中身を見て、各処理に使われている命令や分岐、条件などを網羅しているか調べる方法。<br>仕様書に書かれている通りに動作しているかを確認する。`},
{target:`ブラックオックステスト`, content:`ソースコードを見ずにプログラムの入出力だけに注目し、動作が仕様通りかどうかを判定する方法。<br>定められたテストケースで正しい結果が得られるか確認する。`},
{target:`BTS（Bug Tracking System）`, content:`プロジェクトで検出したバグを登録し、修正状況を管理するシステム。<br>担当者や対応状況、履歴を把握し、情報を共有するために使われる。`},
{target:`☆SQL（Structured Query Language）`, content:`関係データベース管理システム（RDBMS）でデータを操作・管理するための標準的な言語。<br>データベース内のデータの作成、読み取り、更新、および削除（CRUD操作）が簡単に行える。特定のスキーマを持つテーブル形式でデータを扱うことを前提とし、複雑なクエリを実行してデータを抽出・集計・分析することが可能。広範な業界で使用され、特にデータ整合性と一貫性が求められるアプリケーションで重宝されている。`},
{target:`☆NoSQL（No Structured Query Language）`, content:`開発データベース以外のデータベース。<br>関係データベースでの課題を解決するために作られたデータベースのこと。表形式の構造にこだわらず、様々な形式のデータをそのまま保存できる。複数のサーバーでデータを分散して保存できるなど拡張性が高く、多数のアクセスが集中した場合でも性能を上げやすい特徴がある。データ分析などの用途で多く使われている。`},
{target:`非構造化データ`, content:`ブログの記事や画像、動画のように自由な形式のこと。<br>住所録での郵便番号、住所、電話番号のような、項目の内容によって入れる場所が決まっているのではない。`},
{target:`☆キーバリュー型`, content:`キーと呼ばれる索引に対する値をキーとペアで格納するシンプルなデータ構造のこと。<br>キーの値で検索することで、対応する値を高速に見つけられる。`},
{target:`列指向型（カラム指向型）`, content:`通常の関係データベースが行単位でデータを扱うのに対し、列単位でデータを扱う手法。<br>同じ列に似た様な値が入ることが多い場合の集計処理などが得意。`},
{target:`ストアドプロシージャ`, content:`データベース内に格納される定型処理。<br>データベースの中に格納されている関数で、データベース内で条件分岐やループなどの制御も含めた複数の処理をまとめて実行する役割を担う。事前にコンパイルしておくことで高速に処理でき、呼び出し側のプログラムもシンプルになる。呼び出し側のプログラムへの戻り値がある場合はストアドファンクションと呼ぶこともある。`},
{target:`PL/SQL`, content:`Oracle社が開発したSQLの拡張言語。<br>Oracle Databaseでのストアドプロシージャの作成に使われる。DB2やMariaDBなどでも使えるようになってきている。`},
{target:`Transact-SQL（T-SQL）`, content:`SQLを拡張した言語。<br>Microsoft SQL Serverなどでストアアドプロシージャの作成に使われるが、多くのDBMSとの互換性はない。`},
{target:`O/Rマッピング（Object/Relational）`, content:`オブジェクト指向言語で作成したプログラムの内部で保持しているデータをリレーショナルデータベースに保存する時に、自動的に対応付けてくれる手法のこと。`},
{target:`マテリアライズドビュー`, content:`データベースの参照性能を向上するための手法。<br>抽出したデータを元のテーブルから複製しておくことで、検索する時には元のテーブルを参照する必要が無く、応答速度を向上させる仕組み。元のテーブルから更新が反映されるまでには少し時間がかかるため、最新の内容とは限らないが、更新が少なく参照が多いテーブルでは高速に動作するメリットがある。`},
{target:`データウェアハウス`, content:`データの貯蔵庫。<br>データの分析や検索に特化している。システムを横断して、目的に合わせて必要なデータを統合して扱えることが特徴。`},
{target:`データレイク`, content:`構造化データだけでなく、非構造化データも格納できる場所。<br>機械学習などのデータ分析に使用され、大量のデータを低コストで保存するために使われる。`},
{target:`ETL（Extract, Transform, Load）`, content:`抽出、変換、格納の頭文字。<br>さまざまデータベースやシステムからデータを抽出し、扱いやすいフォーマットに変換して、統合して格納する処理のこと。`},
{target:`バージョン管理システム`, content:`ファイルの変更箇所を管理するソフトウェア。<br>ファイルを変更した時の差分や履歴を管理するソフトウェア。いつ誰がどこをどのように修正したのか？最新のバージョンはどれか？などを管理することで、前のバージョンに戻す、変更内容を確認する、開発環境から本番環境にソースコードの差分だけを反映する、などさまざまな使い方ができる。`},
{target:`Git`, content:`利用者の手元のリポジトリにすべての履歴が保存される分散型のバージョン管理システム。<br>中央のリポジトリにアクセスできない環境でも変更の記録などが可能。`},
{target:`Subversion`, content:`履歴を一箇所のサーバーで管理する集中型のバージョン管理システム。<br>コミットするたびに新しい番号が付与されるため、バージョンを直感的に管理できる。`},
{target:`先祖返り`, content:`プログラムや文書などを修正した時に、何らかの原因で古いバージョンを修正してしまい、過去に修正したはずの問題点が再び発生する状態。`},
{target:`★Web制作・運用で使われるIT用語`, content:`ーーーーー`},
{target:`AMP（Accelerated Mobile Pages）`, content:`スマホでの表示を高速化する手法。<br>スマートフォンでGoogleの検索結果からWebページを閲覧する時に、高速に表示させる技術。シンプルなHTMLとCSSでデータ量の少ないページを作成することで携帯電話での通信量を減らすことに加え、CDNを使うことで読み込み時間を削減している。検索結果の上位に表示されることもあり、対応しているWebサイトが増えている。`},
{target:`モバイルフレンドリー`, content:`スマートフォンでの閲覧に適しているデザインでWebページを作成すること。<br>利用者の利便性が高まるだけでなく、検索サイトでの順位も高くなる傾向にある。`},
{target:`拡張コンポーネント`, content:`AMPのページ内で広告や動画などの埋め込み、カルーセルやアコーディオンといったデザインを実装し、見栄えのするページを作成するためのコンポーネント。`},
{target:`canonicalタグ`, content:`URLの正規化に使われるタグのこと。<br>AMPによってCDNからWebページを配信すると、同じコンテンツで複数のURLができるため、正規のURLを指定する。`},
{target:`OGP（Open Graph Protocol）`, content:`WebサイトをSNSでシェアした時の表示の工夫。<br>そのページの概要を表示するためのプロトコル。FacebookやTwitterなどでURLを投稿するだけで、そのページのタイトルや説明文、サムネイル画像などを合わせて表示できる。Webページを作成する時に、適切に設定しておくことは必須となっている。`},
{target:`アイキャッチ`, content:`目を引き付けるという意味。<br>記事のタイトルや内容にあった画像を使うことで読者の興味を引き、記事を読まれやすくするためにページの上部やOGPで使われる。`},
{target:`☆favicon`, content:`Webページに設置するページのブランドを表す画像。<br>Webブラウザのお気に入りに登録した時やタブにアイコンとして表示される。拡張子は.ico。`},
{target:`☆ウェブクリップ`, content:`スマートフォンのホーム画面にWebサイトへのショートカットを配置した時に使われるアイコンのこと。<br>faviconより大きな画像で、拡張子は.png。`},
{target:`☆SPA（Single Page　Application）`, content:`単一のWebページでコンテンツを切り替える仕組み。<br>Webブラウザでリンクをクリックした時にページを遷移することなく新しいページの内容を表示する仕組み。1つのWebページでアプリケーションが構成されており、ページの一部だけを更新すれば済むため、サーバーとの通信量を最小限に抑えられる。また、利用者としてもページを書き換えられる時間が減るためストレスが減る。`},
{target:`Ajax`, content:`JavaScriptとXMLを使って、非同期にサーバーと通信し、その結果に応じてページの内容を書き換える手法。<br>XMLではなくJSONが使われることも多い。`},
{target:`Hisory API`, content:`JavaScriptでURLの履歴を管理する機能。<br>SPAのWebアプリでは、コンテンツの書き換え時にURLが変わらないが、APIで履歴を追加すればURLを書き換えられる。`},
{target:`プリレンダリング`, content:`HTMLを事前に作成し、SEO対策をすること。<br>SPAではコンテンツが動的に変更されるため、検索エンジンのクローラーに収集されないことを防ぐ。`},
{target:`☆レンダリング`, content:`コンピュータがデータを処理して視覚的に表示すること。<br>Webページでは、HTMLやCSSなどのコードをブラウザが解釈し、画面に表示可能な形式に変換する。映画やゲームでは、3Dモデルやシーンを画像や動画として表示する。デジタル情報を見える形に変える作業。`},
{target:`☆SEO（Search Engine Optimization）`, content:`検索エンジン最適化。<br>Webサイトが検索エンジンの結果ページで上位に表示されるように工夫すること。サイトへの訪問者数を増やすことができる。具体的には、キーワードの選定やコンテンツの質向上、サイトの構造改善などを行う。検索エンジンは、ユーザーに関連性の高い情報を提供するため、対策を講じることで検索結果での目立ちやすさが向上する。`},
{target:`静的サイトジェネレータ（SSG）（Static Site Generator）`, content:`MarkdownからWebサイトを生成するソフトウェア。<br>利用者がアクセスするたびにWebページの内容を生成して表示するのではなく、事前に静的サイトを生成しておくソフトウェアのこと。ブログなどの場合、事前にページを生成しておくことでサイトの表示が高速になるだけでなく、管理画面などの動的なWebアプリやデータベースが無い分、セキュリティ面でもメリットがある。代表的なツールとして、HugoやGatsby、Next.jsなどがあり、GitHub PagesやNetlifyなどのホスティングサービスがよく使われる。`},
{target:`☆CMS（Contents Management System）`, content:`ブログなどのように文章や画像を用意するだけで、だれでも簡単にWebサイトを更新、管理できるシステムのこと。<br>企業のWebサイトでも多く使われている。`},
{target:`パンくずリスト`, content:`Webサイトでトップページから現在のページまでの階層構造を表示したリンクのこと。<br>利用者のサイト内での移動を支援するもので、多くのSSGで自動生成される。`},
{target:`☆SSR（Server Side Rendering）`, content:`JavaScriptのコードをレンダリングする場所。<br>動的なWebサイトで、HTMLを生成する手法。サーバー側でHTMLを生成してページの全体を返し、Webブラウザでそれを表示する。`},
{target:`☆CSR（Client Side Rendering）`, content:`JavaScriptのコートをレンダリングする場所。<br>動的なWebサイトで、HTMLを生成する手法。サーバー側ではJSONなどのファイルを生成し、Webブラウザ側でHTML中のJavaScriptがコンテンツ部分のHTMLを生成して表示する。`},
{target:`サードパーティCookie`, content:`異なるドメインで使われるCookie。<br>表示しているWebサイトと異なるドメインから発行されているCookieのこと。ドメインをまたいでアクセスでき、様々なWebサイトの利用状況を把握できるため、主に広告を表示するために使われている。利用者の興味関心や属性などのプライバシーを守るため、ブロックする設定を提供しているWebブラウザもある。`},
{target:`☆Cookie`, content:`Webサイトがユーザーのブラウザに保存する小さなデータ。<br>サイトはユーザーの訪問履歴や設定を記憶し、次回の訪問時に便利な情報を提供する。例えば、ログイン状態の維持やカートの中身を保存するのに使われる。`},
{target:`☆URL（Uniform Resource Locator）`, content:`Webページの具体的なアドレスを示すもの。<br>プロトコル（http://）、サブドメイン（www）、ドメイン名（yahoo.co.jp）、およびパス（'/'）で構成される。`},
{target:`☆ドメイン`, content:`ウェブサイトの住所のようなもの。<br>インターネット上で特定のサイトを識別しアクセスするための名前（例：example.com）。ユーザーは数字のIPアドレスを覚える必要なく、簡単にウェブサイトにアクセスできる。yahoo.co.jpは、「yahoo」がサブドメイン、「co」が第二レベルドメイン、「jp」がトップレベルドメイン（TLD）になる。`},
{target:`ファーストパーティCookie`, content:`表示しているWebサイトのドメインから発行されているCookieのこと。<br>ログイン状況やアクセス履歴などを管理するために使われている。`},
{target:`☆ビーコン`, content:`Webページ内に埋め込まれた画像のこと。<br>読込むことで利用者がアクセスしたことを確認する。サイズも小さく、利用者はその存在に気付かないことも多い。`},
{target:`リターゲティング（リマーケティング）`, content:`自社のサイトを過去に訪問した人に対して広告を出すこと。<br>自社に興味を持っていることが多く、接触回数を増やすために使われる。`},
{target:`ブラックハットSEO（Search Engine Optimaization）`, content:`悪質な手法で検索結果を変える。<br>検索結果に表示される順位を不正な方法で変えること。質の低いコンテンツを上位表示させるテクニックを意味する。リンクを購入したり自作自演で被リンクを大量に設置する方法や、本文中にキーワードを不自然な形で大量に詰め込む方法、検索エンジン向けと利用者向けに別のページを用意する方法などが使われる。`},
{target:`ホワイトハットSEO`, content:`検索サイトが推奨する方法でSEO対策を実施すること。<br>アクセスしてくる人の役に立つ内容になるように、質の高いコンテンツを作成することが求められる。`},
{target:`ブラックハット`, content:`脆弱性などを狙って攻撃し、悪用する人のこと。<br>一般的には悪い人を指すが、セキュリティの国際的なカンファレンスの名前としても使われる。`},
{target:`ペンギンアップデート`, content:`Googleの検索結果の表示順序を決めるアルゴリズムの変更のこと。<br>ブラックハットSEOをしているサイトの順位の低下やインデックスからの削除があげられる。`},
{target:`レスポンシブデザイン`, content:`異なるサイズの画面でも見やすく配置するデザイン。<br>パソコンとスマートフォンのように画面サイズが異なる端末でも、それぞれ読みやすい配置に自動的にレイアウトされる仕組みを持つデザインのこと。Webサイトの運営者が1つのHTMLファイルを作成するだけで、利用者の端末の画面サイズに応じて自動的にコンテンツの配置や表示される分量などが変わるようにCSSを作成する。`},
{target:`モバイルファースト`, content:`パソコンよりもスマートフォン向けのWebサイトを優先して作成すること。`},
{target:`プログレッシブエンハンスメント`, content:`コンテンツに注目し、どんな環境でも表示されるだけでなく、利用者の環境に応じて高機能なデザインを追加する手法。`},
{target:`ハンバーガーメニュー`, content:`スマートフォンでWebページを表示した時に、三本線のボタンを押すとメニューが表示される仕組み。<br>ハンバーガーのように見えることから名づけられた。`},
{target:`カルーセル`, content:`ページ内の要素を左右に移動して切り替える手法。<br>Webべーじ内に配置した画像などを横方向に移動して中身を切り替える手法のこと。一定の時間が経過すると切り替わったりマウスでクリックすると切り替わったりする。限られた領域に多くの画像を表示できる一方、利用者がその存在に気付かず一部しか見ていない、全ての内容が表示されるまでに時間がかかるといった問題もある。`},
{target:`マーキー（marquee）`, content:`文字を横方向にスクロールさせる手法。`},
{target:`ヒーローイメージ`, content:`Webページの全面を覆うような画像や、その配置のこと。<br>利用者の印象に残るだけでなく、背景に動画を配置すれば、カルーセルより多くの情報を表示できる。`},
{target:`☆CSSフレームワーク`, content:`典型的なWebデザインの土台。<br>Weページのデザインを指定する言語で、レイアウトの配置、ボタンやフォームのデザインの土台となるもの。初期設定のままである程度見た目の良いデザインになるだけでなく、レスポンシブデザインなどに自動的に対応できるものが多い。他のWebサイトと似たようなデザインになりやすいというデメリットもある。`},
{target:`Sass（Syntactiocally Awesome Style Sheets）`, content:`CSSを拡張した言語で、変数や四則演算などプログラミング言語に近い構文を取り入れること。<br>より効率よくCSSを書ける。CSSに変換して使われる。`},
{target:`lorem ipsum（ロレム・イプサム）`, content:`画面イメージなどを説明する時に、何らかの文章が入ることを示すために使われるダミーテキスト。<br>文面に意味はなく、デザインと見せるために使われる。`},
{target:`ユーティリティファースト`, content:`CSSでクラスに対してスタイルを設定するのではなく、あらかじめ用意されたクラスを組み合わせてデザインすること。<br>Tailwind CSSが有名。`},
{target:`WebAssembly（WASM）`, content:`Webブラウザ上で高速に実行するプログラミング言語。<br>Webブラウザ上で機械語に近い速度でプログラムを実行するための仕組み。Webブラウザでのプログラムの実行に多く使われているJavaScriptはインタプリタ型のプログラミング言語であり、コンパイル型に比べると実行速度が劣るが、CやC++、Rustといった言語で作成されたプログラムをWebブラウザで実行できるようにしたもの。`},
{target:`☆Rust`, content:`Mozilla Foundationによって開発された言語。<br>WebAssemblyとの親和性が高い。メモリ関連の安産性が高いことから注目を集めている。`},
{target:`WASI（WebAssembly System Interface）`, content:`WebAssemblyをWebブラウザ以外の環境からでも実行できるインターフェイス。<br>対応していれば、同じコードを様々な環境で実行できる。`},
{target:`asm.js`, content:`CやC++で書いたソースコードをJavaScriptに変換して、Webブラウザで実行する技術。<br>事前コンパイルでコードを最適化することで高速に実行できる。`},
{target:`WebSocket`, content:`Webで双方向通信を実現する仕組み。<br>WebブラウザとWebサーバーの間での双方向の通信を低コストで実現するための仕組み。HTTPではWebブラウザからの要求にWebサーバーが応答するが、これをWebサーバー側からも送信することで、サーバー側の更新状況をリアルタイムにWebブラウザに通知できる。一度コネクションを確立すれば、その後は専用のプロトコルでやり取りする。`},
{target:`☆TCP（Transmission Control Protocol）`, content:`インターネット上でデータを確実に送受信するための仕組み。<br>通信相手の状態を確認しながら通信を行う方式。データを小さなパケットに分けて送り、受信側で再構築する。パケットが正しく届いたか確認し、紛失した場合は再送するため、信頼性が高い通信を実現する。ウェブページの読み込みやメールの送受信に使われる。`},
{target:`UDP（User Datagram Protocol）`, content:`インターネット上でデータを素早く送るためのプロトコル。<br>通信相手の状態を確認せず一方的に送る方式。TCPとは異なり、データの到達確認や再送信を行わないため、信頼性は低いが、通信速度が速いのが特徴。リアルタイム性が求められる動画ストリーミングやオンラインゲームなどに使われる。`},
{target:`MQTT（Message Queuing Telementry Transport）`, content:`IoT端末のように性能が低い端末や、ネットワークの通信速度が遅い端末でも双方向通信が可能なプロトコル。<br>非同期で多数のデバイス間での通信に向いている。`},
{target:`☆QUIC（Quick UDP Internet Connections）`, content:`TCPの持つ信頼性の高い通信を行う技術と、UDPのようにリアルタイム性の高い通信を行う技術を兼ね備えた新しいプロトコル。`},
{target:`WebTransport`, content:`QUICを使った双方向通信の仕組み。<br>TCPとUDPのそれぞれのメリットを生かした通信が可能。WebSocketの次の技術といわれている。`},
{target:`WebRTC（Web Real-Time Communications）`, content:`Webでリアルタイムな通信を実現する仕組み。<br>Webブラウザ同士がWebサーバーを介さずにリアルタイムにやり取りする仕組み。最初にそれぞれの端末がWebページを開く必要はあるが、その後は端末同士でカメラやマイクなどを使って音声や映像、データを双方向に通信できる。専用のソフトウェアのインストールは不要で、Web会議やチャット、ファイル共有などを実現できる。`},
{target:`MediaStream`, content:`パソコンやスマートフォンのカメラやマイクを使って、動画や音声などを扱うためのAPI。<br>Webブラウザなどから端末のカメラやメイクを操作できる。`},
{target:`☆P2P（Peer to Peer）`, content:`コンピュータ同士が直接データを共有するネットワークモデル。<br>中央サーバーを介さず、各コンピュータ（ピア）が対等にデータを送受信する。ファイル共有やビデオチャット、仮想通貨の取引などが効率的に行える。BitTorrentが有名。`},
{target:`シグナリング`, content:`端末同士がP2Pでやり取りする前に、それぞれのIPアドレスやポート番号など、通信に必要な情報をサーバーを経由してやり取りする仕組み。`},
{target:`☆WebGL（Web Graphics Library）`, content:`Webブラウザで3Dを表示する仕組み。<br>Webブラウザにプラグインをインストールすることなく、2次元や3次元のグラフィックスを描画できる仕組み。コンピュータのGPUを使うため高速な演算が可能で、滑らかな映像を描画できる。多くのWebブラウザが対応しており、Flash Playerなどのプラグインも不必要なことから、スマートフォンなどでも動作する。`},
{target:`OpenGL`, content:`OSを問わずに利用できるグラフィックスに関するライブラリ。<br>GPUを使ったソフトウェアを複数のプラットフォームで動作させられる。`},
{target:`プラグイン（アドオン）`, content:`ソフトウェアに第三者が機能を追加できる手法。<br>Webブラウザでは翻訳や動画再生、辞書など便利な機能が提供されている。`},
{target:`☆Three.js`, content:`JavaScriptだけで3Dのコンテンツを作成し、実行できるライブラリ。<br>素材やサンプルも用意されているため、気軽に3DのCGの表示を試せる。`},
{target:`SVG（Scalable Vector Graphics）`, content:`ベクター形式で作成する画像フォーマット。<br>アイコンやロゴに多く使われる。拡大してもギザギザが目立たないため、利用者の画面サイズや解像度に合わせて画像を用意する必要が無い。実態はXMLで書かれたテキストファイルのため、テキストエディタでも編集でき、JavaScriptなどプログラムから操作することもできる。`},
{target:`☆XML（Extensible Markup Language）`, content:`データの構造化と交換を目的とした言語。<br>テキストベースの形式で情報を記述する。タグで要素を囲み階層化し、データとその意味を明確にする。ウェブでのデータ交換や設定ファイルの保存に広く使われる。`},
{target:`ラスター（ビットマップ）`, content:`ベクターと対になる考え方。<br>画像を小さな点（ピクセル）で表現する。画像を拡大するとジャギーが目立つが、写真などに使われている。`},
{target:`VML（Vector Markup Language）`, content:`XML形式で作成されるベクター形式の画像フォーマット。<br>Internet Explorerで多く使われていた。現在はSVGに置き換わっている。`},
{target:`wepack`, content:`JavaScriptなど複数のファイルをまとめるツール。<br>Webアプリでは、複数のJavaScriptファイルに分割する場合があるが、古いブラウザでも読込めるように、順番などを自動的に検出し、依存関係が変わった場合も最小限の変更で対応できる。JavaScript以外にもCSSや画像なども埋め込める。`},
{target:`タスクランナー`, content:`Webサイトの構築に必要なファイルの格納や変換といった処理を自働化するプログラムのこと。<br>npm-scriptsやgulp、gruntなどのツールがある。`},
{target:`ミニファイ（minify）`, content:`JavaScriptやCSSなどで不要な改行やインデントなどを削除し、ファイルの容量を減らすこと。<br>可読性は落ちるが、通信量を削減でき、高速に表示できる。`},
{target:`Rollup`, content:`webpackと同様に、JavaScriptの複数のソースコードをまとめて1つのファイルに出力するツール。<br>ReactやVue.jsなど多くのライブラリで使われている。`},
{target:`WebP`, content:`圧縮率の高い新たな画像保存形式。<br>JPEGやPNG、GIFといった画像ファイル形式の代替となることが期待される画像保存形式。圧縮率が高く、PNGのような背景の透過やGIFのようなアニメーションにも対応している。対応しているWebブラウザの増加により、写真のJPEG、イラストのPNG、アニメ―ションのGIFといった使い分けを置き換える可能性がある。`},
{target:`☆GIF（Graphics Interchange Format）`, content:`最大256色と限られている画像形式。<br>アイコンや図形などシンプルな図形、ロゴやボタンなど便利なだけでなく、アニメーションでもよく使われる。`},
{target:`☆PNG（Portable Network Graphics）`, content:`GIFの課題だった256色という制限をなくし、可逆圧縮で画質の劣化が無いことが特徴。<br>イラストやロゴなどWeb上の画像で多く使われている。`},
{target:`☆JPEG（Joint Photographic Experts Group）`, content:`非可逆圧縮の画像形式。<br>背景を透明にできず、圧縮率を上げると画質が低下するが、色数が多くてもきれいに表示できるため写真などによく使われる。`},
{target:`RFC（Request For Comments）`, content:`Web技術に関する仕様の提案や結果についての文書。<br>コメントを募集するとの意味で、より良い仕様になるように研究者などからのコメントでインターネットで募集すること。インターネットを通じてその使用を広めることが目的で、技術仕様を公開しているためだれでも利用でき、議論に参加できる。一度発行されたものは変更されず、内容が改定される場合は新しい番号が割り当てられる。`},
{target:`TC39（Technical Committee 39）`, content:`JavaScriptの開発者や専門家のグループ。<br>JavaScriptの使用（ECMAScript）の策定や議論を行っている。主要なブラウザベンダーも参加している。`},
{target:`リバースプロキシ`, content:`外部から処理を仲介するサーバー機能。<br>インターネットから組織の内部へのアクセスを代理で行う機能のこと。組織の内部に設置したWebサーバーなどへのアクセスを中継する際、負荷分散やキャッシュなどの工夫により内部のサーバーの負荷を下げる効果がある。また、セキュリティ管理が容易になり、内部のサーバーのシステム構成を自由に変更できるメリットもある。`},
{target:`☆プロキシサーバー`, content:`組織の内部からインターネットへのアクセスを代理で行うサーバー。<br>匿名性を確保するセキュリティ面だけでなく、キャッシュによりWebサイトの表示を高速化できる。`},
{target:`ロードバランサ―`, content:`負荷分散装置。<br>システムに対するアクセスを自動的に複数のサーバーに振り分ける装置。特定のサーバーに負荷がかかることを避けるために使われる。`},
{target:`CASB（Cloud Access Security Broker）`, content:`多くのクラウドサービスを使っていると、データの漏洩や消失の可能性があるため、一貫したポリシーを適用するためのツール。シャドーITの防止にも使われる。`},
{target:`CDN（Content Delivery Network）`, content:`多くのコンテンツを効率よく配信する仕組み。<br>事前にWebページの内容を利用者に近いサーバーにキャッシュしておくことで、高速に表示する技術。大規模なサイトや、大容量のファイルを扱うサイトの場合、サーバーの負荷を肩代わりでき、アクセスが収集した場合の影響を抑えられる。運営者は高付加に備えた環境を安価に構築でき、利用者も高速にWebサイトを表示できる。`},
{target:`☆Webアクセレータ`, content:`一度アクセスしたページのデータをキャッシュとして保存しておき、次回以降のアクセスを高速化するツール。<br>画像などを圧縮する機能を持つものもある。`},
{target:`ネガティブキャッシュ`, content:`データが存在しなかったことをキャッシュに残しておくこと。<br>何度もチェックしてサーバーに負荷をかけないために使われる。DNSで使われることが多い。`},
{target:`☆C10K問題（Client 10 Kilo）`, content:`1つのWebサーバーに接続するクライアントの数が多くなる（目安としては約1万台に達する）と、ハードウェアの性能に余裕があっても、性能が大きく低下する問題。`},
{target:`☆サーバーレス`, content:`サーバーの保守や運用なしに利用する手法。<br>サーバーの構築や保守、運用をすることなく、サーバー上でプログラムなどを実行できるようにする手法。サーあーは存在するが、その管理を任せることで、開発者がサーバーの管理を意識する必要が無くなる。分単位や秒単位、リクエスト単位で課金されるため、使われていない場合は費用が発生しないというメリットもある。`},
{target:`☆FaaS（Function as a Service）`, content:`サーバー単位で処理をするのではなく、関数単位で処理をするアーキテクチャ。<br>開発者はハードウェアやOSについて意識する必要が無い。`},
{target:`☆BaaS（Backend as a Service）`, content:`認証やデータベースなどの機能をAPIとして提供するアーキテクチャ。`},
{target:`ベンダーロックイン`, content:`特定のベンダーに依存すること。<br>サーバーレスの技術はサービスを提供している会社の技術に特化することが多く、他社に移行することが難しい。`},
{target:`☆ヘッドレスCMS`, content:`見た目を自由に作れるWebコンテンツ管理の仕組み。<br>表示する画面を持たないCMS（Contents Management System）のこと。ブログなどのように、文章や画像を用意するだけで、だれでも簡単にWebサイトを更新・管理できる便利なシステムとしてCMSがある。閲覧画面を用意せず、コンテンツを管理する機能だけを持つ。別のシステムからAPIを投資てそのコンテンツを呼び出して使われる。`},
{target:`マルチデバイス対応`, content:`Web画面として表示するだけでなく、スマホアプリから直接呼出して表示すること。<br>Webでは表現できない便利なインターフェイスを実現できる。`},
{target:`Webhook`, content:`Webアプリケーションで更新などの何らかのイベントが発生した時に、それを他のアプリに通知する仕組み。<br>受信側から起動する必要が無いため、効率が良い。`},
{target:`☆トランスパイラ`, content:`他のプログラミング言語のソースコードを生成。<br>ある言語のソースコードを変換して他のプログラミング言語のソースコードを生成するツール。Webブラウザでは基本的にJavaScriptのソースコードしか実行できないため、JavaScript以外の便利な特徴を持つプログラミング言語でソースコードを作成し、JavaScriptに変換するなどの手法がよく使われる。`},
{target:`AltJS`, content:`トランスパイラによりJavaScriptのコードを生成する代替言語の総称。<br>CoffeeScriptやtypeScriptといったプログラミング言語があげられる。`},
{target:`ソースマップ`, content:`トランスパイラなどで生成したソースコードを元のソースコードと関連付けるファイルのこと。<br>デバッグにおいて、エラー箇所の特定などに使われる。`},
{target:`シンタックスシュガー`, content:`糖衣構文。<br>プログラミング言語で同じ処理を書く時の複数の書き方のこと。人が読み書きしやすいように簡略化された記法を指すことが多い。`},
{target:`JAMstack`, content:`JavaScriptとAPIで動的なWebサイトを実現する手法。<br>JavaScript、API、Markupを合わせた言葉で、モダンなWebアプリの作り方を指す言葉。Webサーバーでは主に静的なWebサイトを返すことで高い性能を維持し、Webブラウザで動的なJavaScriptを実行、サーバー側はAPIとして処理することで再利用しやすくセキュリティ面でのメリットがある。`},
{target:`LAMP`, content:`Linux、Apache、MySQL/MariaDB、Perl/PHP/Pythonの頭文字を取った言葉。<br>Webアプリの開発に多く使われている構成のこと。JAMstackとよく比較される。`},
{target:`デカップリング`, content:`分離・切り離しを意味し、複数のシステムを疎結合にして連携すること。<br>分離することで、あるシステムの影響を他に与えないことを目指す考え方と指す。`},
{target:`☆エコシステム`, content:`さまざまなサービスが連携して共存共栄すること。<br>お互いに利益を得ること。JAMstackではCDNやSSG、ヘッドレスCMSなどが連携している。`},
{target:`☆仮想DOM（Document Object Model）`, content:`ブラウザ内の要素を簡単に操作し高速表示する仕組み。<br>WebブラウザがHTMLファイルを解釈し、表示する時に使うDOMをJavaScriptのオブジェクトとして表現したもの。JavaScriptのプログラムでDOMを書き換えた時に、その差分を反映することで、動的にWebページの内容を書き換えるが、DOMの変更を最小限に抑えることで、高速に表示する仕組み。`},
{target:`☆DOM（Document Object Model）`, content:`Webページの構造を表現する方法。<br>HTMLやXMLドキュメントをツリー状のオブジェクトとして扱い、JavaScriptからアクセスして内容を動的に変更できる。ボタンをクリックするとテキストが変わるなどの動作を実現する。Webページのインタラクティブな操作を可能にする重要な仕組み。`},
{target:`☆React`, content:`Facebookにより開発されたライブラリ。<br>大規模なアプリで多く採用されている。Webアプリ以外にも、スマホアプリの開発にも使われている。`},
{target:`☆Vue.js`, content:`軽量で学びやすいフレームワーク。<br>このフレームワークを活用し、SSRのアプリケーションを簡単に作成できるNuxt.jsも注目されている。日本語の資料も多い。`},
{target:`Web Components`, content:`HTMLの要素をカプセル化して再利用可能にする手法。<br>カスタム要素やShadow DOM、HTMLテンプレートといった技術で構成される。`},
{target:`マテリアルデザイン`, content:`Googleが提唱するデザインの考え方。<br>ボタンなどに奥行きや影、動きなどを表現し、利用者が現実に即して捉えられるようなデザインにすること。奥行きや影を表現するには要素の重なりなどを意識する必要がありアニメーションで動きを表現するにはその物体の重さや質感を体感できる必要がある。統一感のあるデザインにより、利用者のストレスをなくすことにつながる。`},
{target:`フラットデザイン`, content:`立体的な表現は使わずに、無駄な装飾を除いたデザインのこと。<br>最近では、うっすらと影を付けたフラットデザイン2.0という言葉もよく使われる。`},
{target:`スキューモーフィズム`, content:`利用者が普段慣れ親しんでいるもののように立体的に見せることで、直感的にわかりやすくするデザインのこと。<br>フラットデザインの反対だといえる。`},
{target:`ニューモーフィズム`, content:`スキューモーフィズムに対してニュー（新しい）をかけた言葉。<br>色も少なくシンプルなデザインだが、凹凸によって奥行きを表現するようなデザイン。`},
{target:`☆PWA（Progressive Web Apps）`, content:`スマホアプリのように扱えるWebアプリ。<br>スマートフォンでネイティブのアプリを使っているのと同じような体験が得られるWebアプリで、HTML、CSS、JavaScriptを使って開発される。Webアプリのため、アプリストアなどからのインストールが不要なだけでなく、ネットワークの状態が悪くても使えて、プッシュ通知や全画面表示などに対応し、スムーズに操作できる。`},
{target:`Service Worker`, content:`Webページの裏側で動くスクリプト。<br>Webブラウザで利用者が表示しているページの裏側でJavaScriptを動作させる仕組み。この仕組みにより、キャッシュやプッシュ通知などの機能を提供し、スマホアプリを使っているかのようにWebアプリを利用できる。また、Webアプリの一部機能はオフラインでも動作でき、Webページを開いていなくても最初の情報に更新できる。`},
{target:`☆Promise`, content:`JavaScriptで非同期処理を行う時、複数の処理を実行すると結果の管理や処理順序の制御が難しいが、これを解決するために作られた仕組み。`},
{target:`Cache API`, content:`PWAでオフライン表示に対応するためにキャッシュを使うためのAPI。<br>ネットワークのアクセスを仲介し、オフラインではキャッシュを返す。`},
{target:`プッシュ通知`, content:`Push APIとNotifications APIという2つのAPIを使って、Webサーバー側の更新などをWebブラウザに通知する。<br>利用者は1度だけ許可する必要がある。`},
{target:`☆VPS（Virtual Private Server）`, content:`仮想専用サーバー。<br>レンタルで自由に使える仮想的な専用サーバー。インターネット上で提供されるレンタル型のサーバーのこと。ハードウェアは共用のサーバーだが、契約者ごとに個別の仮想環境が割り当てられ、ソフトウェアの追加や設定の変更が自由にできる。レンタルサーバーとは異なり契約者自身でサーバーの構築や運用が必要だが、専用のサーバーより安価に使える。`},
{target:`レンタルサーバー`, content:`インターネット上で提供されるサーバー環境をレンタルして使う形式のこと。<br>安価にWebサーバーやメールサーバーを利用でき、運用を任せることもできる。`},
{target:`☆ホスティング`, content:`レンタルサーバーやVPSのように、事業者が用意しているサーバーを借りて利用すること。<br>Webサーバーやメールサーバーの運用に使われることが多い。`},
{target:`☆XaaS（SaaS、PaaS、IaaS）（Everything as a Service）`, content:`クラウドで提供されるサービスの形態。ソフトウェアやハードウェア、ネットワークなどをインターネット経由でサービスとして提供し、利用者が使い大量や期間に応じて柔軟に利用できる形態のこと。`},
{target:`☆AWS（Amazon Web Services）`, content:`Amazonが提供しているクラウドサービス。<br>世界で最も多く利用されているといわれ、書籍や動画での解説、利用事例なども多く公開されている。`},
{target:`☆Azure`, content:`Microsoftが提供しているクラウドサービス。Windowsとの親和性が高く、Office 365やオンプレミスで使用しているActive Directoryとの連携が容易。`},
{target:`GCP（Google Cloud Platform）`, content:`Googleが提供しているクラウドサービス。<br>機械学習やデータ分析などにおいて便利な機能が揃っている。Firebaseというモバイルアプリの開発基盤も強み。`},
{target:`スクレイピングとクローリング`, content:`Webサイトを巡回して抽出。<br>前者は、Webページから欲しい情報だけをプログラムで自動的に抽出すること。後者は、複数のWebページをプログラムで自動的に巡回すること。併せて使われることが多い。定期的に更新される情報を収集する場合などに使われるが、利用規約などを確認し、サーバーに大きな負荷を与えないようにする必要がある。`},
{target:`スパイダー`, content:`クローリングするプログラムのことをクローラーと言い、Webサイトは蜘蛛の巣のようにお互いにつながっていること。`},
{target:`CAPTCHA（Completely Automated Public Turning test to tell Computers and Humans Apart）`, content:`Webサイト上で人間しか判断できないような画像を表示するなどの方法により、コンピュータによる自動操作で大量に処理されることを防ぐために使われる。`},
{target:`DoS攻撃（Denial of Service）`, content:`一次的に大量の通信を発生させることで対象のネットワークを麻痺させてしまう攻撃。<br>いたずら電話が大量にかかってきて、必要な電話に出られない状態だといえる。`},
{target:`☆REST（Representational State Transfer）`, content:`URIを指定してリソースを操作する仕組み。<br>シンプルなHTTPと同じように状態を持たずにやり取りして、Webアプリの様々な操作を可能にする仕組みのこと。URIを指定するだけで処理を実行できるため、特定のOSやプログラミング言語に依存せずに利用できる。一般にXMLやJSONといったファイル形式でやり取りするため、人間にもコンピュータにも扱いやすい。`},
{target:`☆URI（Uniform Resource Identifier）`, content:`インターネット上のリソース（Webページやファイルなど）を識別するためのアドレス。<br>URLやURNがある。特定のリソースにアクセスして情報を取得したり操作したりできるインターネット上の住所のようなもの。`},
{target:`RESTful API`, content:`RESTの原則に従って設計されたWeb用のAPI。<br>特定のURIにHTTPでリクエストを送ることで、様々な情報を取得、操作できるようになる。`},
{target:`OData（Open Data Protocol）`, content:`RESTの考え方に沿って作られたプロトコル。<br>XMLだけでなくJSONも扱える。Microsoft社によって進められ、OASIS標準にもなっている。`},
{target:`パーセントエンコーディング`, content:`URIで使用できない文字を使いたい場合の変換方法。<br>「&percnt;」という記号に続けて16進数で表現する方法で、半角スペースであれば「&percnt;20」となる。`},
{target:`☆SOAP（Simple Object Access Protocol）`, content:`Webサービス間でのデータ交換プロトコル。<br>アプリケーション間で情報を交換するための仕様で、HTTP以外にも様々な通信プロトコルで使用できる。要求と応答のどちらもXMLで表現するため、特定のOSやプログラミング言語に依存せずに利用できる。大規模なプロジェクトで使われていたが、最近ではWebアプリの多くがRESTなどを使うようになり、利用は減っている。`},
{target:`XML-RPC（eXtensible Markup Language Remote Procedure Call）`, content:`SOAPの前身とも言われるプロトコル。<br>ブログの自動投稿などネットワーク経由で処理を呼び出すときにHTTPを使い、XML形式でやり取りする手法。`},
{target:`WSDL（Web Services Description Language）`, content:`Webサービスを利用するための仕様を記述するためのXML形式の書式。<br>開発ツールに読み込むことで、そのWebサービスを呼び出すコードを自動生成できる。`},
{target:`UDDI（Universal Description, Discovery and Integration）`, content:`Webサービスを検索、紹介するためのシステム。<br>インターネット上に公開されるパブリックと社内で使われるプライベートがある。`},
{target:`GraphQL`, content:`WebAPI向けのクエリ言語。<br>WebアプリなどでAPIを使う時に便利な問合せ言語。RESTではシンプルな問合せが可能だが、応答には不要なものが含まれることもあり、通信量が無駄になる。そこで、データベースに対してSQLを発行するように要求内容を細かく指定することで、Webでの問い合わせでも必要なものだけを取得できる。`},
{target:`gRPC`, content:`XML-RPCやSOAPはXMLなどテキスト形式でやり取りするため無駄なデータが多いが、これはバイナリで通信するためデータ量を減らせる。`},
{target:`BFF（Backends For Fronteds）`, content:`APIの呼出しやHTMLの生成を担当するサーバーのこと。<br>マイクロサービスが増えた時に複数のAPIをまとめられることでリクエストの数を減らせる。`},
{target:`GraphiQL`, content:`Webブラウザなどで実行できる、GraphQLの総合開発環境。<br>リクエストの内容を入力し、そのリクエストに対する応答を簡単に確認できる。`},
{target:`☆OpenAPI（Swagger）`, content:`REST APIを定義するツール。<br>RESTで提供するAPIについてのドキュメント作成ツール。RESTはURLだけで操作するため、処理が増えるとそれだけAPIの数も増える。それぞれのAPIの処理内容や使い方についてドキュメントを生成するのは手間なため、ソースコードから自動的にドキュメントを生成し、メンテナンスをするツールが求められた。`},
{target:`YAML（YAML Ain't Markup Language）`, content:`XMLやJSONのように設定ファイルなどに使われる書式。<br>インデントで階層を表現する。`},
{target:`Swagger Editor`, content:`OpenAIで扱うAPIの仕様書を作成するためのエディタ。<br>YAML形式で仕様を記述し、プログラミング言語での呼び出し用コードを自動生成できる。`},
{target:`Swagger Inspector`, content:`WebブラウザでAPIの呼出しをテストできるツール。<br>パラメータだけでなくHTTPヘッダーを変えて実行できるため、ログインが必要な場合も対応できる。`},
{target:`SAML（Security Assertion Markup Language）`, content:`異なるドメインでのID連携の企画。<br>異なるドメイン間で利用者を認証するための規格。HTTPでXML形式のデータを送信すれば別のドメインでもやり取りできるため、他のサービスとの間で認証情報を連携できる。このため、シングルサイノンを実現する時など、認証情報をサービス間でやり取りするために使われる。`},
{target:`フェデレーション`, content:`あるサイトで認証されている認証情報を、異なるドメインのサイトと連携して、許可したサービスを利用できるようにする仕組み。シングルサインオンの方式の1つ。`},
{target:`IDaaS（Identity as a Service）`, content:`認証やID管理、シングルサインオンなどの機能をクラウドのサービスとして提供すること。<br>利用すればアプリの開発時に認証基盤を用意する必要が無い。`},
{target:`SCIM（System for Cross-domain Identity Management）`, content:`複数のドメイン間で利用者のIDを交換するための規格。<br>RESTやJSONを使ってHTTPでやりとりし、自動的な生成、更新、失効などが可能。`},
{target:`スクラッチ開発`, content:`ゼロから作る開発手法。<br>既存のフレームワークやパッケージなどを使用せずに、ゼロから開発する手法。開発に時間もコストもかかる可能性があるが、既存のフレームワークなどに依存しないため自由度が高く、他社の製品と差別化できる場合もある。また、フレームワークのバージョンアップやサポート終了などの影響を受けにくいメリットもある。`},
{target:`バニラ`, content:`ソフトウェアやアルゴリズムなどを提供されたままの状態で使うこと。<br>Webアプリケーションの開発でフレームワークを使わずに実装することを指すことも多い。`},
{target:`技術的負債`, content:`きちんと設計されずに作られたソフトウェアや、時代の変化に対応できていない古い設計のソースコードのこと。<br>知識が共有されておらず、保守が難しい場合を指す。`},
{target:`車輪の再発明`, content:`広く使われている良い方法があるにもかかわらず、ゼロから作ること。<br>無駄なコストや労力がかかることを指すが、初心者が学ぶためにあえて取り組むこともある。`},
{target:`リファラー`, content:`アクセス先に提供されるアクセス元の情報。参照元のこと。<br>Webの場合は利用者が前に閲覧していたWebサイトのURLなどの情報のこと。検索エンジンから訪問した場合は、どのようなキーワードで検索していたのかを把握でき、SEOを考えるときにも重要な情報となる。広告を複数の媒体に出したときに効果の測定だけでなく、相互リンクの作成に使われる場合もある。`},
{target:`リファラースパム`, content:`アクセス解析の担当者がアクセス元を確認する行為を悪用し、スパムサイトからアクセスして担当者を誘導する手法。<br>マルウェアをダウンロードさせられる危険もある。`},
{target:`アクセスログ`, content:`WebサイトへのアクセスがあるたびにWebサーバーに記録されるログ。<br>リファラーだけでなく、アクセス時刻やユーザーエージェント、IPアドレスなどが記録される。`},
{target:`ユーザーエージェント`, content:`WebサイトにアクセスするたびにWebブラウザからWebサーバーに通知される利用者の情報。<br>使っているOSやWebブラウザのバージョンなどが該当する。`},
{target:`★攻撃から守るセキュリティ・ネットワーク用語`, content:`ーーーーー`},
{target:`☆CIA（機密性、完全性、可用性）（Confidentiality, Integrity, Availability）`, content:`セキュリティの3要素。<br>国際規格JIS Q 27000では情報セキュリティの定義として、この3つをあげており、これらのバランスを意識することが重要。`},
{target:`機密性`, content:`許可されたものが許可された方法だけで利用できるように設計、設定されていること。<br>暗号化やパスワードの設定、アクセス権限の付与があげられる。`},
{target:`完全性`, content:`改ざんや破壊が行われておらず、内容が一貫していて正しい状態にあること。<br>電子署名やハッシュ値による確認、バックアップの取得などがあげられる。`},
{target:`可用性`, content:`システムの安定利用のために、障害が発生しにくい、障害が発生しても影響を小さく抑えられる、復旧までの時間が短いことを指し、冗長化などがあげられる。`},
{target:`冗長化`, content:`システムの一部が故障しても全体の運用が継続できるようにするために、重要なコンポーネントを複数用意しておくこと。<br>サーバーでは負荷分散装置（ロードバランサー）を使用、ストレージはRAID技術、複数のネットワークパスや冗長ネットワーク機器の配置、無停電電源装置（UPS）やデュアル電源供給システムを使用するなど。`},
{target:`PCI DSS（Payment Card Industry Data Security Standard）`, content:`クレジットカード情報を扱う時のセキュリティ基準。`},
{target:`SLA（Service Level Agreement）`, content:`サービス事業者が示す品質の保証内容。<br>クラウドサービスなどの場合、利用できない状況が発生すると困るため、サービスの品質レベルについてサービス利用開始前に合意する事項のこと。稼働率や復旧までの時間、アックアップの有無だけでなく、セキュリティ管理策やサービスレベル、基準を満たさない場合の返金などのペナルティについても規定することが一般的。`},
{target:`ファイブナイン`, content:`稼働率として99.999&percnt;の精度を確保できるシステムやそれを要求すること。<br>年間で5分程度の停止しか許されないような、信頼性が重要なシステムで使われる。`},
{target:`二段階認証と多要素認証`, content:`パスワードの漏洩による不正ログインを防ぐ方法。<br>IDやパスワードなどの「知識情報」と、携帯電話などの「所持情報」、指紋や静脈といった「生体情報」、を組合せる多要素認証も不正ログイン対策として使われる。`},
{target:`☆シングルサインオン（SSO）（Single Sign On）`, content:`一度のログインで複数のサービスやアプリにアクセスできる仕組み。<br>例えば、Googleアカウントでログインすると、Gmail、YouTube、Googleドライブなど全てのGoogleサービスを使えるようになり、覚えるパスワードが減り、ログインの手間が省ける。`},
{target:`☆OAuth`, content:`部分的な情報にだけアクセスを許可する仕組み。<br>シングルサインオンを実現したいWebアプリケーションの間で認可情報を受け渡す仕組み。IDやパスワードを教えずに自分の情報を伝えられ、その有効期限までの間、許可されたサービスは利用者に代わってその情報にアクセスできる。`},
{target:`☆ソーシャルログイン`, content:`SNSのアカウントを利用して、他のWebアプリにログインすること。<br>OAuthの仕組みが使われており、新しいIDやパスワードを発行する必要が無い。`},
{target:`☆ベアラートークン`, content:`電車の切符のように、トークンを持っていれば利用できること。<br>署名などが無いため、誰が管理しているか、持ち主が誰かは問わない。`},
{target:`OpenID Connect`, content:`ログインなどの認証処理を外部に任せる仕組み。<br>OAuthの機能を使って、利用者を認証する仕組み。Webアプリが、IDとパスワードを使った認証や認証情報の管理を自前で行うのではなく、サービスを使うことで認証された結果を受け取ることができる。`},
{target:`IDトークン`, content:`OpenID Connectにて認証された結果、Webアプリが受け取るトークン。<br>電子署名がついているため、改ざんがあっても検知できる。`},
{target:`IDプロバイダー（IdP）`, content:`クラウド環境で利用者のIDを保存、管理するサービス。<br>他のサービスがIDとパスワードでログインする処理を代わりに行い、認証情報を提供する役割を果たす。`},
{target:`Amazon Cognito`, content:`AWSにおいて認証や認可の機能を提供するサービス。<br>ユーザー名とパスワードでの認証だけでなく、SAMLやOpenID Connectなどに対応している。`},
{target:`FIDOとTPM（Fast IDentity Online, Trusted Platform Module）`, content:`パスワードに代わる認証の規格。<br>前者は、パスワードを使わずに認証できる仕組み。後者は、コンピュータに搭載されている専用のチップで暗号やハッシュの計算が可能な技術。鍵や生体情報を暗号化して保存し、指紋や顔認証と組合せることで、パスワードを使わずに生体情報と所持情報による二要素認証が実現できる。`},
{target:`トラッキングとITP（Inteligent Tracking Prevention）`, content:`Web上での人の行動を追跡。<br>前者は、Cookieなどを使って、Web上で利用者がどのように行動しているかを追跡することで、広告の表示などに使われている。後者は、プライバシーの懸念があることからサイトを越えてCookieを利用した場合、Webブラウザでその読取りを制限する仕組み。`},
{target:`フィンガープリント`, content:`指紋の意味で、データが書き換えられていないことを証明するためのデータのこと。<br>Webの場合、Webブラウザの特徴から利用者を特定するために使われる。`},
{target:`☆リスティング広告`, content:`検索連動型広告。<br>利用者が検索したキーワードなどに沿った広告を表示すること。`},
{target:`FLoC（Federated Learning of Cohorts）`, content:`Cookieを使うのではなく、Webブラウザでの閲覧履歴をもとに広告を表示する技術。<br>個人を特定するのではなく、利用者をグループ化して表示する広告を決める。`},
{target:`☆ワンタイムパスワード（OTP）（One-Time Password）`, content:`一定の時間で変わるパスワード。<br>Webサイトのログインや振り込み操作をするときに、一度限りのパスワードを発行・使用する方法。アプリでスマートフォンの画面に表示するタイプや、メールで送信するタイプ、パスワード生成器を事前に配布するタイプなど、さまざまな方法がある。`},
{target:`フィッシング詐欺`, content:`本物を装った偽のWebサイト。<br>入力されたIDやパスワードを盗み出す手口のこと。`},
{target:`チャレンジレスポンス方式`, content:`サーバーにアクセスを要求するとチャレンジと呼ばれるランダムな文字列が生成され、利用者は指定された計算の結果を返す方式。一致すれば認証が成功する。`},
{target:`タイムスタンプ方式`, content:`トークンと呼ばれる専用の端末を利用者が持っており、そこに表示された値を利用者が入力する。`},
{target:`☆WPS（Wi-Fi Protected Setup）`, content:`無線LANを簡単に設定する仕組みや規格。<br>SSIDやパスワードなどを簡単に設定するための仕組みや規格のこと。`},
{target:`☆AOSS（AirStation One-Touch Secure System）`, content:`バッファローが販売している無線LAN機器に搭載されている設定システム。`},
{target:`Wi-Fi 6`, content:`高速・多数同時接続を実現した次世代Wi-Fi。<br>IEEE 802.11axという無線LANの規格のこと。歳代通信速度が9.6Gpbsと高速化しただけでなく、同時に複数の端末を接続してもスループットの低下が起こりにくい。`},
{target:`インシデント`, content:`重大な事故・事件につながりかねない事案。`},
{target:`ハインリッヒの法則`, content:`1つの重大事故の背景には29の軽微な事故があり、その背景には300の異常（ヒヤリハット）があるという法則。`},
{target:`フォールトアボイダンス`, content:`事故や傷害などが起きないように品質を高め、十分にテストして原因を可能な限り排除すること。`},
{target:`フォールトトレランス`, content:`事故や故障がおきることを前提にシステムを設計し、トラブルが発生しても、予備の系統に切り換えることで正常に稼働させること。`},
{target:`CSIRTとSOC（Computer Sequrity Incident Response Team, Security Operation Center）`, content:`セキュリティに対応する組織。<br>前者は、コンピュータのセキュリティに関するインシデントが発生した時に速やかに対応するために作られる組織。後者は、ログの監視や分析などインシデントの見地に重点を置いている組織。`},
{target:`CVSS（Common Vulnerability Scoring System）`, content:`脆弱性の深刻さの共通基準。<br>企業や担当者に依存せず同じ基準で数値化できるため、定量的に比較できる。この数値を見ることで、優先して対策すべき脆弱性を判断するために使われる。`},
{target:`脆弱性診断`, content:`脆弱性の存在を調べる調査。<br>ソフトウェアやネットワーク、サーバーなどに存在する脆弱性の有無をチェックすること。`},
{target:`ペネトレーションテスト`, content:`ネットワーク上で稼働しているコンピュータに対し、基地の技術を用いて侵入を試みることで、システムに特定の脆弱性や問題点があるか調べる手法。`},
{target:`ポートスキャン`, content:`ネットワークに接続しているコンピュータでどのようなポートが開いているか外部から情報収集すること。<br>不要なポートは閉じておくことが求められる。`},
{target:`バックドア`, content:`攻撃者が外部から攻撃し、侵入に成功した時に、それ以降の侵入を簡単にするために導入するソフトウェアのこと。`},
{target:`IPアドレスフィルタリング（IPホワイトリスト）`, content:`WebアプリでIPアドレスを使用して使用者を制限すること。<br>Webサーバー設定ファイルやアプリケーションコードで特定のIPアドレスからのアクセスを許可・拒否する。`},
{target:`UTM（Undified Threat Management）`, content:`統合脅威管理。複数のセキュリティ機能をまとめた機器。<br>ファイヤーウォールやIDS/IPS、ウィルス対策ソフトなどを1つの製品としてまとめたもの。中小企業など管理に時間や人員を用意できない場合に多く使われる。1つでセキュリティを向上できるため便利だが、この機器に障害が発生すると影響が大きくなる。`},
{target:`ファイヤーウォール`, content:`インターネットと社内の境界に設置して、社内への門番の役割を担うネットワーク機器。<br>あらかじめ決められてルールに従って、データの転送を許可するか判断する。`},
{target:`パケットフィルタリング`, content:`送信元や宛先のIPアドレスやポート番号をチェックして通信を制御する機能。<br>指定されたポート番号だけを許可し、他はブロックするなどの設定が可能。`},
{target:`Webフィルタリング`, content:`組織の内部から外部の有害サイトへのアクセスを制御する機能、<br>危険なURLへのアクセスや業務と無関係なサイトの閲覧を遮断、または制限できる。`},
{target:`SIEM（Security Information and Event Management）`, content:`セキュリティに関するログを一元管理する仕組み。<br>サーバーが発するログだけでなく、IPSやIDSが監視しているネットワークの状況や利用者が使っているコンピュータが発するさまざまなログを統合し、リアルタイムに情報を収集して表示する仕組み。管理担当者が把握すべき情報を統合でき、何らかの事故が起きた場合も異常が発生している場所や内容を速やかに確認、対応できる。`},
{target:`IDS（Intrusion Detection System）`, content:`ネットワーク上で外部から社内への通信を監視し、不正な侵入を検知する仕組み。<br>不振な通信や通常ではありえない通信があれば異常として通知する。`},
{target:`IPS（Intrusion Prevention System）`, content:`ネットワーク上で外部から社内への不正な侵入と判断される通信を遮断する仕組み。<br>不正でない通信を遮断する誤検知が発生すると業務に影響が出るため運用が重要。`},
{target:`SOAR（Security Orchestration, Automation and Response）`, content:`セキュリティの運用を自働化するシステム。<br>脆弱性の管理や定型的なインシデントへの対応を自働化するシステムのこと。運用担当者の作業量を減らし、本来の作業に集中するために使われる。`},
{target:`レピュテーション`, content:`過去の評判データを使い、悪質なものを排除する手法。<br>さまざまな情報を組み合わせて評価する手法のこと。迷惑メールの場合は、メールの本文だけで評価するのではなく、メールの送信者や経由しているサーバーなどの情報を蓄積することで判定する。複数の情報源や指標を使って学習させることで常に最新の脅威に対応でき、誤検出などを減らす効果がある。`},
{target:`遠隔操作ウイルスとRAT（Remote Administration Tool/Remote Access Tool）`, content:`パソコンやスマホに感染して外部から操作。<br>マルウェアなどに感染されたパソコンを遠隔から操作すること。`},
{target:`ビジネスメール詐欺（BEC）（Business Email Compromise）`, content:`取引先になりすまし、金銭的な被害を与える手法。<br>実際の取引先に成りすまして振込先口座を変更させるようなメールを送信し、金銭をだまし取るなどの手法のこと。`},
{target:`EPP（Endpoint Protection Platform）`, content:`組織内に侵入したマルウェアを検知するソフトウェア。<br>ウィルス対策ソフトも該当する。`},
{target:`BYODとMDM（Bring Your Own Device, Mobile Device management）`, content:`前者は、従業員が個人的に所有しているモバイル機器を業務に使うこと。<br>後者は、組織内にあるモバイル機器を管理すること。`},
{target:`サンドボックス`, content:`保護された領域でプログラムを試すソフトウェア。<br>実際のコンピュータ上ではなく、プログラムを実行できる環境を仮想的に用意し、その中でプログラムを試しに実行することでマルウェアを検出する手法。`},
{target:`NGAV（Next Generation Anti-Virus）`, content:`AIなどを用いてマルウェアを検知するソフトウェア。<br>次世代型のウィルス対策ソフトと呼ばれ、機械学習などの手法を用いて未知のマルウェアや攻撃手法に対応できるソフトウェアのこと。従来の製品では防ぎきれなかった高度な攻撃手法に対しても、過去のマルウェアとの類似点や不審な動作を検出することで対応できる。誤検知や警告などが多く発生する可能性もあり、運用体制が求められる。`},
{target:`ランサムウェア`, content:`コンピュータの中のファイルを勝手に暗号化し、元に戻す方法として身代金を要求するマルウェアのこと。`},
{target:`ハニーポット`, content:`おとりとしてインターネット上に設置されたコンピュータのこと。<br>マルウェアの作成者や攻撃者が攻撃したときに、その情報を収集することで、対策に役立てる。`},
{target:`EDR（Endpoint Detection and Response）`, content:`マルウェアの脅威を検知し、対応を支援するツール。<br>実際に被害が発生した場合に、その影響を最小限に抑えるために使われる。マルウェアでなくても、異常を感知した時に隔離して素早く管理者に通知する。感染経路やその動作を特定する、など二次被害を防ぐために監視する役割がある。`},
{target:`VPN（Virtual Private Network）`, content:`安全なネットワークを仮想的に構築する手法。<br>暗号化などの技術を用いて、仮想的に専用線のような安全な通信回線を実現する手法。`},
{target:`VDI（Virtual Desktop Infrastructure）`, content:`リモートで使うデスクトップ環境を実現する仕組み。<br>パソコンのデスクトップ環境をサーバー上で仮想的に構築し、利用者は離れた場所にある端末からそのサーバーに接続して操作する仕組み。サーバーで集中管理できることから、管理者はソフトウェアの管理が楽になる。`},
{target:`WAF（Web Application Firewall）`, content:`典型的な脆弱性を狙った攻撃を阻止する仕組み。<br>Webアプリケーションを狙った典型的な攻撃から守るためのファイアウォールで、通信内容を確認して攻撃と判断したものを遮断する。ハードウェアとして提供される製品だけでなく、Webサーバーに導入するソフトウェア型の製品もある。クラウド型で提供される製品も登場しており、手軽に導入・運用できることも多い。`},
{target:`ブラックリスト方式`, content:`SQLインジェクションなど代表的な攻撃パターンを登録しておき、該当する通信を不正と判定する方式。`},
{target:`ホワイトリスト方式`, content:`正常な通信の代表的な入力内容尾を登録し、リストに存在しない通信を不正と判断する方式。`},
{target:`シグネチャ`, content:`不正な通信や攻撃パターンをまとめた定義ファイルのこと。`},
{target:`DLP（Data Loss Prevention）`, content:`機密情報の外部への流出を阻止する技術。<br>守るべき重要な情報を決め、それを守ために監視する技術のこと。`},
{target:`スパイウェア`, content:`コンピュータに保存されている情報を外部に送信するソフトウェア。<br>利用者の個人情報などを収集することが多く、ウィルスとは別物と考えることが多い。`},
{target:`キーロガー`, content:`利用者がコンピュータに入力したキー操作を監視、記録するソフトウェア。<br>外部に送信されるとログイン時のID・パスワードなどが漏洩する可能性がある。`},
{target:`フォレンジック`, content:`コンピュータに関する犯罪や法的紛争が生じた際に、機器に残されたログや保存されているデータなどを収集・分析し、証拠の確保や原因究明を行うこと。`},
{target:`SQLインジェクション`, content:`データベースを扱うアプリケーションの脆弱性。<br>データベースにデータを保存しているプログラムにおいて、利用者が入力する項目に特殊な記号を含めることで、アプリケーションが想定していない操作を不正に行う脆弱性のこと。データの改ざんや情報の漏洩、システムの停止などにつながる場合がある。利用者にできる対策はなく、開発者が対策を実施しなければならない。`},
{target:`プレースホルダー`, content:`実際のデータを入れるために場所だけ確保しておくこと。<br>SQL文の中で値が変わる場所を指定しておくことで、SQLインジェクションを防ぐために使われる。`},
{target:`プリペアドステートメント`, content:`プレースホルダーを使用したSQL文を事前に用意しておき、パラメータだけを変更して実行できるようなプログラミング言語を備えた機能のこと。`},
{target:`ファジング`, content:`ソフトウェアに対して不具合の有無を調べるために、予測不可能なデータを入れて、その挙動を確認する方法。<br>主に脆弱性を調べるために使われる。`},
{target:`XSS（Cross Site Scripting）`, content:`複数のサイトを横断する攻撃。<br>Webアプリケーションで利用者がHTMLタグを含んだ内容を投稿した時、HTMLタグが解釈されて表示される場合などに発生する脆弱性のこと。任意のスクリプトを投稿できるため、攻撃者が用意したリンクを利用者がクリックするだけで脆弱性のあるWebサイトに悪意のあるスクリプトが勝手に投稿・実行されてしまうなどの恐れがある。`},
{target:`CSRF（Cross-Site Request Forgeries）`, content:`他人に成りすました攻撃。<br>Webアプリケーションへの投稿時にサーバー側で適切なチェックが行われていないことで、自動的に投稿できてしまう脆弱性のこと。`},
{target:`SDNとNFV（Software-Defined Networking, Network Functions Virtualization）`, content:`仮想的なネットワークを実現。<br>前者は、ネットワークの構成をソフトウェアで定義して仮想的なネットワークを作ること。ケーブルの配線によらず柔軟なネットワークを構築できるため、ネットワーク構成が変更になった場合も、ソフトウェア上で設定を変更するだけで対応できる。後者は、仮想マシンでネットワーク機器の機能を実現。`},
{target:`DNSSEC（Domain Name System Security Extensions）`, content:`ネームサーバーからの応答を検証する手法。<br>DNSによってホスト名に対応するIPアドレスを取得する時、偽のDNSサーバーから偽装された情報が送られないように、公開鍵暗号や電子署名の仕組みを使って検証する手法。対応しているDNSサーバーが応答時に電子署名を付加し、受信側がその電子署名を検証することで、正規のDNSサーバーからの応答であることを確認できる。`},
{target:`MPLS（Multi-Protocol Label Switching）`, content:`ラベルを使って転送先を制御する方法。<br>宛先のIPアドレスでネットワークの経路を判断する代わりに、パケットにつけられたラベルと呼ばれる目印で経路を判断する手法。データセンターなど複雑なネットワークでも経路を検索する時にラベルのみ見ればよいため、高速に探索できる。`},
{target:`広域イーサネット`, content:`企業の拠点間をつなぐネットワーク。<br>LANと同じようにイーサネットで接続する。IP-VPNやインターネットVPNに比べて通信速度が速く、遅延も小さい。`},
{target:`☆BLE（Bluetooth Low Energy）`, content:`Bluetoothを使った低消費電力の通信。`},
{target:`PLC（Power Line Communications）`, content:`コンセントに挿してインターネットに接続。<br>親機と子機の両方をコンセントに挿すだけで電力線を通して通信するため、有線LANと同じように安定して通信できる。`},
{target:`☆PoE（Power over Ethernet）`, content:`LANケーブルを通じて電力を供給する技術のこと。`},
{target:`WOL（Wake On LAN）`, content:`LANからの起動。ネットワーク経由で起動すること。`},
{target:`VoIP（Voice over Internet Protocol）`, content:`インターネット経由での音声通信。IP電話。`},
{target:`FQDN（Fully Qualified Domain Name）`, content:`完全修飾ドメイン名。<br>URLなどでドメイン名を省略しない表記方法。一般的にはホスト名とドメイン名をつなげたものを指す。`},
{target:`☆SSL/TLS（Secure Sockets Layer, Transport Layer Sequrity）`, content:`Webにおけるデータを暗号化する仕組み。<br>WebブラウザでWebサイトを閲覧する時に発生する通信を暗号化するしくい。Webサイトが対応しているとHTTPSというプロトコルが使われ、httpsで始まるURLに加え、鍵のアイコンが表示される。このアイコンをクリックすると、そのサーバーで使用されている証明書を表示でき、サイトの実在性を確認できる。`},
{target:`PKI（Public Key Infrastructure）`, content:`公開鍵基盤。公開鍵暗号を使用したセキュリティ基盤。<br>公開鍵暗号を用いてインターネット上で情報を安全にやり取りするためのインフラのこと。`},
{target:`★人工知能に使われる技術用語`, content:`ーーーーー`},
{target:`クラスタリング`, content:`似たデータを集めてグループ分け。<br>大量のデータを何らかの規則によって似たデータで集めてグループ化すること。教師なし学習のひとつ。`},
{target:`k-means法`, content:`最初にk個の適当なクラスタにわけたあと、それぞれのクラスタでの平均（重心）を計算することを繰り返すことで、似た様なデータを集める手法。`},
{target:`ウォード法`, content:`複数のクラスタ間の距離を測定する方法の1つ。<br>他にも群平均法や最短距離法、最長距離法などがある。`},
{target:`エルボー法`, content:`クラスタリングで最適なクラスタ数を求める手法。`},
{target:`決定木`, content:`条件を木構造で表現し、分類や回帰を実現する手法。<br>木構造の分岐に条件を設定し、その条件を満たすかどうかを判断して問題を解く手法のこと。教師あり学習にて分類や回帰を行う方法。`},
{target:`情報利得`, content:`木構造の親から子に分割する時に、データをどれだけ綺麗に分割できたかを示す指標。<br>決定木ではこの値が最大になるように学習を進める。`},
{target:`不純度`, content:`情報利得を計算する時に使われる指標。<br>エントロピーや時に係数、誤分類率がよく使われる。`},
{target:`エントロピー`, content:`平均情報量とも呼ばれ、あいまいさを表す指標のこと。`},
{target:`ランダムフォレスト`, content:`複数の決定木による多数決で精度を高める手法。<br>学習方法は単純だが、単独の決定木を使うよりも良い結果が得られることが知られている。`},
{target:`アンサンブル学習`, content:`複数の機械学習モデルを組合せて、多数決などを使ってより良いモデルを構築する方法。`},
{target:`バギング`, content:`多くのサンプルからいくつかを取り出して並列で識別器を作成し、そこから多数決で決定する方法。`},
{target:`ブースティング`, content:`バギングとは異なり、直列に識別器を作り、前の識別器での結果に重みをつけて学習する手法。`},
{target:`サポートベクターマシン`, content:`データを分離する境界からの距離を最大化する手法。<br>データを2つのグループに分けるような問題で、それぞれのデータからできるだけ離れたところに境界を作るマージン最大化の考え方で分離する機械学習の手法。`},
{target:`ソフトマージン`, content:`分類する時に完全に分離できなくても、多少の誤りは許す方法のこと。`},
{target:`ハードマージン`, content:`2つにはっきり分けられることを前提としてマージンを設定する手法。`},
{target:`カーネル法`, content:`低次元のデータを高次元のデータに変換して分離する手法。`},
{target:`ニューラルネットワーク`, content:`脳を模倣した構造で信号を伝えて計算する手法。<br>入力層、中間層、出力層という階層構造において、入力層での入力値が、中間層のニューロン経由で計算して出力層に伝えられ、結果が出る。重みを調整することが機械学習での学習に該当する。`},
{target:`パーセプトロン`, content:`ニューラルネットワークの一種。<br>入力から出力までの処理の流れや見た目は同じだが、出力にステップ関数を使用し、0と1のいずれかを出力する。`},
{target:`勾配降下法`, content:`ニューラルネットワークにおける重みを調整する時、正解データと実際の出力との誤差を関数と考えて、その関数の最小値を求めるために関数の傾きを使う手法。`},
{target:`誤差逆伝播`, content:`ニューラルネットワークにおける重みを調整する時、正解データと実際の出力との誤差を出力層から中間層に向けて逆方向に伝え、重みを調整する手法。`},
{target:`ディープラーニング（DL）（Deep Learning）`, content:`深い階層を実現したニューラルネットワーク。<br>ニューラルネットワークの階層を深くすることで複雑な関数を表現でき、難しい問題を解けるという考え方。`},
{target:`勾配消失問題`, content:`ニューラルネットワークにおける重みを調整する時、誤差逆伝播法による重みを調整するが、階層が深くなるとその誤差が伝わりにくくなる問題。`},
{target:`過学習`, content:`訓練データに最適化して高い正解率が得られるが、検証データでは正解率が上がらないこと。`},
{target:`正則化`, content:`過学習を防ぐため、誤差を計算する関数に項目を追加し、複雑なモデルになることを防ぐ手法。L1、L2などがある。`},
{target:`機械学習（ML）（Machine Learning）`, content:`データをもとに気海外ルールを学習する方法。<br>人間がルールを与えるのではなく、大量のデータを与えることで、そのデータからコンピュータが自動的にルールを学習し、判断する仕組み。`},
{target:`エキスパートシステム`, content:`専門家の知識を収集、蓄積して、その知識をもとに推論する手法。`},
{target:`前処理`, content:`機械学習でコンピュータに学習させる前に、学習に使うデータを整形すること。<br>欠損値の補完や外れ値の処理、単位の統一などがあげられる。`},
{target:`ノーフリーランチ定理`, content:`どんなデータに対しても効率よく良い結果が得られるような万能の手法は存在しないという定理。`},
{target:`教師あり学習`, content:`与えられた正解データに近づけるような学習方法。<br>分類や回帰といった問題を解くために使われる。`},
{target:`分類問題`, content:`ジャンルやカテゴリーなど、正解が離散値で与えられ、どのグループに分類されるかを考える問題。`},
{target:`回帰問題`, content:`金額や長さなど、正解が連続値で与えられ、新しいデータに対する値を予測する問題。`},
{target:`ロジスティック回帰`, content:`回帰問題を解くときに、数値を予測するのではなく確立を予測する手法で、0から1の間の値を返す。`},
{target:`教師なし学習`, content:`大量のデータから共通点を見つけて分類する学習方法。`},
{target:`主成分分析`, content:`相関のある多くの変数があったとき、それを少数の項目で表現できるよう、複数の変数から新たな軸を作って解釈する手法。データの次元削減に使われる。`},
{target:`オートエンコーダ`, content:`入力データと同じデータを出力するようなネットワークを作る学習方法。<br>中間層で次元数を下げることができれば、次元削減や特徴量の抽出が可能になる。`},
{target:`次元の呪い`, content:`次元の数が増えると、学習に必要な訓練データの数が指数関数的に増えること。`},
{target:`強化学習`, content:`良い結果に報酬を与えて徐々に成長させる学習方法。<br>試行錯誤した結果に対する報酬を与えることで、その報酬を最大化するように学習する手法。`},
{target:`エージェントと環境`, content:`前者は、強化学習において試行錯誤する行動を考えるとき、学習して行動を決定する部分。<br>後者は、前者に報酬を与える部分。`},
{target:`マルコフ性`, content:`確立の分布が現在の状態のみに依存し、過去のいかなる状態にも依存しないこと。<br>強化学習では過去の状況は関係なく、現在の状況のみで次の行動を決定する。`},
{target:`逆強化学習（IRL）（Inverse Reinforcement Learning）`, content:`報酬の設定がわからない問題において最適な報酬関数（報酬の条件）を推定する手法。`},
{target:`遺伝的アルゴリズム`, content:`生物の進化を模倣したアルゴリズム。<br>強いものが生き残り、弱いものが消えていくという生物の進化の過程を模倣したアルゴリズム。世代が進むごとに少しずつ進化して最適解に近づける。弱いものも一部残すことで多様性を確保したり、時々突然変異を発生させたりするといった工夫がある。`},
{target:`自己組織化マップ`, content:`近くにあるデータを強く学習する方法。<br>周囲の情報を使って、似ているものが近くに集まるように表現することで、データの分類や視覚化に使われる教師なし学習の手法。ニューラルネットワークの一種だが、2次元に表現すると地図のように可視化できることが特徴。多くの変数があるデータから、その傾向や相関関係を調べるとき、人間が視覚的に把握できる。`},
{target:`ベクトル量子化`, content:`アナログの画像や音声をデジタルで扱う時、標本化と量子化が行われるが、これを1つずつ行うのではなくベクトルで扱うことで効率よく変換する方法。`},
{target:`焼きまなし法`, content:`シミュレーティド・アニーリング。<br>組合せ最適化問題に使われる。現在の回の近くを探すだけでなく、新しい回も探して局所解を防ぐ効果がある。`},
{target:`k近傍法`, content:`分類が未知のデータが与えられたとき、その周囲のデータをk個調べて、最も多い種類に分類する手法。<br>2種類に分類する場合、kを奇数にして同数を避ける。`},
{target:`転移学習`, content:`他の領域での成果を活用する効率的な学習方法。<br>ある分野で学習させたモデルを他の分野に応用することで、学習にかかる時間を短縮する手法のこと。学習に使うデータが少なくても、高い精度を出せる。`},
{target:`ファインチューニング`, content:`学習済みのモデルの重みを初期値として、その重みを部調整して新しいモデルを作る手法。<br>転移学習は層を追加して学習するのに対し、重みを調整する手法を指す。`},
{target:`ドメイン適応`, content:`成形された教師データで学習したモデルを実世界で使おうとすると、実世界でのテストデータが教師データと大きく異なる場合があるため、その差をなくす技術。`},
{target:`メタ学習`, content:`学習方法を学習すること。<br>新しいデータが与えられたとき、どのような学習方法が良いのかを過去の経験をもとに効率よく学習する手法のこと。`},
{target:`MNIST（Modified National Institute of Standards and Technology database）`, content:`機械学習に便利な手書き数字のデータの集まり。`},
{target:`iris`, content:`機械学習でよく使われるデータセットの1つ。<br>幅や長さといった4つの値と、正解の3種類の品種が与えられ、花のアヤメの品種を分類する。`},
{target:`OCR（Optical Character Recognition）`, content:`画像に含まれる文字を認識して読み取り、テキストデータとして取り出す手法のこと。<br>名刺の読み取りなど、紙の文書をデータとして入力するためによく使われる。`},
{target:`Kaggle`, content:`投稿された研究用のデータで分析を競う。<br>機械学習やデータ分析に取組む人が集まっているコミュニティやイベントのこと。企業や政府などから様々な課題が提供され、分析や予測の精度を競うコンペが開催されている。`},
{target:`特徴量エンジニアリング`, content:`与えられたデータを機械学習などに使えるような形に変換したり、新しい特徴量を作成したりすること。<br>データについての業務知識や経験が求められる。`},
{target:`競技プログラミング`, content:`出題された問題に対する答えを出すプログラムを作成する順位を競うコンテスト。`},
{target:`勾配ブースティング`, content:`勾配降下法とブースティングを組み合わせた手法。<br>XGBoostやlightGBMなどのフレームワークが、Kaggleなどで多く使われている。`},
{target:`活性化関数`, content:`入力を変換する非線形な関数。<br>ニューラルネットワークで入力から出力を計算する時に使われる非線形な関数。`},
{target:`シグモイド関数`, content:`入力を0から1の範囲の値に変換する関数。<br>入力xが0のとき出力は0.5となる。2つに分類する問題で、その確率を計算する時に使われることが多い。`},
{target:`ソフトマックス関数`, content:`出力値の合計が1になるように変換する関数。<br>複数の出力値の中で、ある出力値が全体に占める割合を示すと考えられ、大きいものを正解とすることが多い。`},
{target:`ReLU関数（Rectified Linear Unit）`, content:`ランプ関数。<br>入力が0未満の場合は0を、0以上の場合は入力と同じ値を返す。入力が0以上の場合の微分が常に1であり、勾配消失問題が起きにくい。`},
{target:`ハイパーパラメータ`, content:`機械学習の処理を調整する特別な値。<br>学習する時の挙動を調整する値のこと。その設定値によって学習の精度や収束するまでの時間が変わる。バッチサイズやエポック数、学習率、ドロップアウト率などが挙げられる。`},
{target:`学習率`, content:`機械学習において、探索する速度を指定する値のこと。<br>大きい値を指定すると大幅に変化するが収束しにくい。小さい値だと少しずつしか変化せず時間がかかる。`},
{target:`グリッドサーチ`, content:`ハイパーパラメータの組合せを全部調べて結果を検証する方法。`},
{target:`ベイズ最適化`, content:`ハイパーパラメータを探す時に、良い結果が得られれば次はその近くの値を調べるなど、前回の結果を使って次の探索を工夫して効率よく探す手法。`},
{target:`ヒューリスティックス`, content:`発見的手法や経験則。<br>経験による勘を使って予測する手法。正解が得られるとは限らないが、ある程度正解に近い値を短時間に得られる手法。機械学習の場合は、人間の経験や勘を使った仮定をある程度踏まえて予測することで、効率よくとく。セキュリティの場合は、過去の検知結果に近い動作があればマルウェアと判断するなどの方法が使われる。`},
{target:`メタヒューリスティック`, content:`ヒューリスティックの方法を応用して、主に組み合わせ最適化問題を解く実験的な解法。<br>様々な問題で実用的な応える得るために使われる手法のこと。`},
{target:`パラメトリック`, content:`事前に母集団の分布がわかっているときに使える手法。`},
{target:`ノンパラメトリック`, content:`事前に母集団の分布がわかっていないもの。`},
{target:`最尤推定`, content:`母集団の分布の形はわかっているが、パラメータがわからない場合、取出した標本から母集団のパラメータを推測する時にもっともらしいものを求める手法。`},
{target:`オンライン学習`, content:`学習データが与えられるたびに、その都度新しいデータのみで学習する手法。<br>1回あたりの学習コストが少ないが、外れ値や新しいデータの影響を受けやすい。`},
{target:`バッチ学習`, content:`学習対象のデータをすべてまとめて一括で学習する手法。<br>学習する順番の影響がなく安定した結果を得られる一方で、使用するメモリ量が多くなりやすい。`},
{target:`CNN（Convolutional Neural Network）`, content:`画像認識に役立つニューラルネットワーク。<br>画像をピクセル単位に処理するのではなく、境界（エッジ）の検出や、似たような色の部分を集めるなど、各ピクセルの周囲の特徴なども使って学習するニューラルネットワークの手法。畳み込みとプーリングと呼ばれる層を繰り返して学習することで、画像や映像などの認識において高い精度が得られたことから超目されている。`},
{target:`畳み込み層`, content:`入力された画像から、その一部の領域での特徴を抽出する役割を持つ層。<br>画像処理ソフトでエッジを強調するフィルタのように、直線や曲線などの境界を検出する。`},
{target:`プーリング層`, content:`畳み込み層で抽出された特徴に含まれるノイズの影響を減らし、平行移動などで特徴が失われないように、その特徴を協調する役割を果たす層。`},
{target:`フィルタ`, content:`入力された画像データに対して演算を行うために用意する配列のこと。<br>フィルタの内容によって画像の特徴を強調したり輪郭を抽出したりできる。`},
{target:`RNN（Recurrent Neural Network）`, content:`時系列データに役立つ再帰的なニューラルネットワーク。<br>気温や売上高などのように時間経過とともに変わる時系列データなど、直前の出力も入力として扱うニューラルネットワーク。文章や音声、動画などの場合、直前のデータが次のデータに関係していると考えられるため、時系列で考えて過去のデータを使って処理する。機械翻訳や音声認識で高い精度が得られたことから注目されている。`},
{target:`BPTT（Back Ppropagation Through Time）`, content:`RNNでの誤差逆伝播を時間軸に沿って伝播させる方法。`},
{target:`RTRL（Real Time Recurrent Learning）`, content:`誤差の逆伝播を行わずに、前の時刻での勾配を使ってリアルタイムに学習を行う方法。<br>学習時にすべての時間のデータを保持しておく必要が無い。`},
{target:`勾配爆発問題`, content:`ディープラーニングでの勾配消失問題とは逆に勾配がどんどん大きくなる問題。`},
{target:`LSTM（Long Short Term Memory）`, content:`RNNを拡張し、長期記憶と短期記憶を組み合わせて学習する方法。<br>忘却ゲートと呼ばれる手法により、大きな変化が起きた場合に忘れることで、様々な長さの時系列に対応できる。また、データの前後関係を保持することで、長期の記憶も実演している。`},
{target:`トランスフォーマー`, content:`自然言語処理においてLSTMにとって代わったモデル。<br>RNNのような反復的な構造を使わずに高い精度が得られ、並列処理によって効率よく学習できる。`},
{target:`GRU（Gated Recurrent Unit）`, content:`ゲート付き回帰型ユニット。LSTMの入力ゲートと忘却ゲートをまとめた更新ゲートを使う。LSTMよりシンプルなモデル。`},
{target:`Reber Grammer`, content:`文字列を入力した時に、次の文字を予測する問題。<br>RNNやLSTMの性能を調べるときによく使われ、その応用としてERGやCERGなどがある。`},
{target:`GAN（GANs）（Generative Adversarial Networks）`, content:`敵対的生成ネットワーク。<br>他のAIに偽物だと判断されないものを作り出す方法。実際には存在しないものを作り出せる技術。与えられたデータの特徴を獲得し、その特徴を使って新しいものを生成した時、他のAIで偽物だと判断できないものを作る。`},
{target:`ミニバッチ学習`, content:`バッチ学習とオンライン学習の中間的な手法で、深層学習で多く使用される。<br>元のデータからランダムに少しずつ抜き出してバッチ学習する手順を何度も繰り返す。`},
{target:`ジェネレーティブデザイン`, content:`与えられた要件をもとにAIがデザインを生成する手法。`},
{target:`DCGAN（Deep Convolutional GAN）`, content:`CNNを応用したGAN。<br>GANよりも鮮明な画像を生成できるとして注目されている。画像を分類するCNNで画像を生成するCNNを鍛える。`},
{target:`ASICとTPU（Application Specific Integrated Circuit, Tensor Processing Unit）`, content:`特定の用途に特化した集積回路。<br>前者は、ルーターやスイッチといったネットワーク機器や、デジタルカメラやコピー機といった画像処理が求められる機器など、特定の用途に向けて複数の機能を1つにまとめた集積回路のこと。後者は、Googleが機械学習に特化し開発したもので、行列演算などニューラルネットワークに最適化されている。`},
{target:`Tensor`, content:`2次元ベクトル、3次元の行列と同じように数を並べた配列で、4次元のことを指して使われることが多いが、n次元まで拡張して考えることもある。`},
{target:`GPGPU（General Purpose Graphics Processing Unit）`, content:`画像処理以外にもGPUを活用。<br>GPUがもつ演算機能を画像処理以外の様々な目的で使用すること。GPUは画像処理を行うために使われているが、その処理の特性上、条件分岐は不得意だが並列処理や浮動小数点の演算が得意なため、行列演算などの膨大な数値計算やシミュレーション、暗号解読、仮想通貨のマイニングなどへの利用が注目されている。`},
{target:`DSP（Diginal Signal Processor）`, content:`音声などの解析を高速に実行するマイクロプロセッサ。<br>光や音声、画像などを信号とみなして、アナログなものをデジタルに変換する、または、デジタルのものをアナログに変換するといった目的で使用されるマイクロプロセッサ。携帯電話やデジタルカメラなどに使用されるため、消費電力を抑えながらも高性能なものが求められ、さらに安価に製造する必要もあり、信号処理に特化している。`},
{target:`マルチエージェント`, content:`強化学習などにおいて、複数のエージェントが協調して答えを出す方法。`},
{target:`ケンタウロス型`, content:`人間とAIが協調すること。<br>それぞれが分担して、より良い結果をうみだそうという考え方。`},
{target:`エッジAI`, content:`現場で動く機器でAIを動かす。<br>エッジコンピューティングの一種で、AIの処理をクラウドなどのサーバーで実行するのではなく、端末側で実行すること。`},
{target:`ファクトリーオートメーション`, content:`工場における生産の自働化のこと。<br>ロボットなどの導入により、無人で作業が行われることを目指す。エッジAIによるリアルタイム制御が期待されている。`},
{target:`異常検知`, content:`他のデータと大きく異なるデータを異常と判断すること。`},
{target:`ディープフェイク`, content:`人工知能による偽物生成技術。`},
{target:`ボーカロイド`, content:`音声合成技術を使って、メロディーと歌詞から独自の歌声を合成できるソフトウェア。`},
{target:`スパースモデリング`, content:`少量のデータでも特徴の抽出により分析できる手法。<br>多くの情報があっても本質は限られたところにあり有用なデータ以外の部分はスカスカであるという考え方。その特徴量を抽出できれば少量のデータでも分析が可能になる。`},
{target:`ウェーブレット変換`, content:`周波数解析の手法の1つ。<br>人間が画像を認識する時、高周波成分をあまり必要としないため、それを削除して圧縮する方法が画像のJPEGで使われている。`},
{target:`圧縮センシング`, content:`与えられた式での未知数の変数の個数よりも、観測できたデータの個数の方が少ない場合でも、元のデータをある程度復元する手法。`},
{target:`LASSO（L1正則化）`, content:`機械学習で過学習を抑えるために加える正則化項の1つ。<br>係数が大きくなることを防ぐだけでなく、係数のスパース性により不要な変数を減らす変数選択にも使える。`},
{target:`AutoML（Automated Machine Learning）`, content:`自動的に機械学習のモデルを作成。<br>機械学習で必要なデータの加工やモデルの生成といった処理を自働化すること。`},
{target:`交差検証`, content:`過学習を防ぐため、データをいくつかに分割し、そのうちの1つをテストデータに、残りを訓練データとして学習することをテストデータを変えながら検証する方法。`},
{target:`ROC曲線（Receiver operationg Characteristic）`, content:`機械学習の評価指標として使われる曲線のグラフ。<br>グラフの下の部分の面積をAUC（Area Under the Curve）という。AUCは0から1の値で、1に近いほど性能が高いことを意味する。`},
{target:`自然言語処理`, content:`人間の言葉を機械で処理する技術。`},
{target:`BERT（Bidirectional Encoder Representations from Transformers）`, content:`事前学習によって言語の知識を獲得することで文章の意味を理解し、質問への応答や文章間の意味的な類似性の判定などを高精度で実現できる。`},
{target:`XLNet`, content:`BERTの弱点を解消するために工夫された言語モデル。`},
{target:`GPT-3`, content:`OpenAIが2020年に発表した高性能の文章生成アルゴリズム。`},
{target:`★使いだしたら一人前！　ITギョウカイ用語`, content:`ーーーーー`},
{target:`上げる`, content:`サーバーやパソコン、ソフトウェアなどを起動する・アップロードする。`},
{target:`☆SSH（Secure Shell）`, content:`サーバーにリモートからログインし、コマンドを実行するために使われるサービス。`},
{target:`☆FTP（File Transfer Protocol）`, content:`Webサーバーなどとの間でファイルを転送するためのプロトコル。<br>レンタルサーバーなどにWebサイトを配置するためによく使われる。`},
{target:`生きている`, content:`サーバーなどが動作している状態。<br>問題が起きていないことを意味する。`},
{target:`ICMP（Internet Contorol Message Protocol）`, content:`TCP/IPにおいて、エラーが発生した場合に通知するなど、通信状態を確認するために使われるプロトコル。`},
{target:`生やす、生える`, content:`サーバーなどを次から次へと構築すること。`},
{target:`軽い`, content:`プログラムがスムーズに動作し、利用者の操作に対してコンピュータが速やかに応答する状態。`},
{target:`枯れる`, content:`時間が経って問題点が少なくなる。<br>ソフトウェアなどの提供から時間が経って、多くの人が使っている間に発見された不具合などがほぼ修正され、問題点がほとんど残っていない状態のこと。`},
{target:`人柱`, content:`公開されたばかりのハードウェアやソフトウェアを購入し、実際に試す人。`},
{target:`クセがある`, content:`問題なく使用できるが、その使い方や操作手順が一般的ではなく、使いづらいこと。`},
{target:`怒られる`, content:`警告やエラーが表示される。`},
{target:`フールプルーフ`, content:`間違って使っても問題が起きないように設計しておくこと。`},
{target:`フェールセーフ`, content:`操作を間違えたり、誤作動したりした場合に、安全を重視して設計すること。`},
{target:`ガバガバ`, content:`エラー処理やセキュリティに関する対策がほとんど実施されておらず、異常な処理が行われてもエラーが発生せずに処理が継続されてしまうこと。`},
{target:`落ちる`, content:`サーバーやパソコン、ソフトウェアなどが停止する。`},
{target:`ダウン`, content:`アクセスの集中やシステム障害、停電などでサーバーなどが停止してしまうこと。`},
{target:`フェイルオーバー`, content:`稼働中のコンピュータに障害などが発生して使えない状態になっているときに、予備で用意しているコンピュータに自動的に切り替えて運用を続けること。`},
{target:`フォールバック`, content:`縮退運転。障害が発生した場合などに、システムの一部を停止した状態で稼働を続けること。<br>また、通信状態が悪化した時に低速で通信を続けること。`},
{target:`落とす`, content:`サーバーやパソコン、ソフトウェアなどを終了すること。<br>また、ファイルなどをダウンロードすること。`},
{target:`アンロード`, content:`メモリ上からデータを削除して領域を解放することを指すこともあるが、データベースの場合はテキストファイルに取り出すこと（エクスポート）を指す。`},
{target:`上り`, content:`ネットワークなどの通信において、手元から相手側に向かう方向のこと。`},
{target:`下り`, content:`ネットワークなどの通信において、相手側から手元に向かう方向のこと。`},
{target:`固まる`, content:`コンピュータを使用している最中に応答がなくなり、操作できなくなること。`},
{target:`キックする`, content:`コマンドを実行する。`},
{target:`重い`, content:`プログラムの処理が想像以上に時間がかかること。`},
{target:`ビジー状態`, content:`コンピュータが大量の処理を行っていて、動作が遅くなっている、もしくは応答が無い状態。`},
{target:`キックする`, content:`プログラムを実行するためにコマンドを実行すること。<br>ジョブ管理ツールなどのソフトウェアが自動的に他のプログラムを実行する場合に使われることが多い。`},
{target:`cron`, content:`Linuxなどで特定の時刻や指定した間隔で処理を実行するように指定できるプログラム。`},
{target:`タスクスケジューラ`, content:`Windowsの標準機能で特定の時刻や指定した間隔で処理を実行するように指定できるプログラム。`},
{target:`フォークする`, content:`分岐する。ソフトウェアの開発において、あるソフトウェアのソースコードを分岐して別のソフトウェアを作り出すこと。`},
{target:`親子`, content:`フォークしたときの元を親、新たに生成されたものと子という。<br>プロセスの場合、一般的に親プロセスをコピーして子プロセスを生成する。`},
{target:`デーモン`, content:`バックグラウンドで動作するプロセスのこと。<br>一般的には、親プロセスが終了していて、そこからフォークした子プロセスを指し、さまざまなサービスを提供する。`},
{target:`切る`, content:`領域を分ける、チケットを発行する。<br>ハードディスクなどを複数のディスク領域に分割したり、フォルダを分けたりすること。一箇所に多くのファイルが入っていると管理できないため、それを分割する意味で使われる。また、プロジェクト管理において、それぞれの作業をタスクとして分けるとき、チケットという名前で管理することが多く、そのチケットを発行することも指す。`},
{target:`ブランチ`, content:`バージョン管理ソフトでの枝分かれのこと。`},
{target:`パーティション`, content:`1台のハードディスクを複数のドライブに分割したもの。`},
{target:`食う`, content:`パソコン上のCPUやメモリ、ハードディスクなどのリソースをある処理が占有すること。`},
{target:`食べさせる`, content:`プログラムにファイルなどのデータを渡して取り込ませること。`},
{target:`つかむ`, content:`ファイルなどをあるプログラムが使用したままの状態のこと。`},
{target:`溜め込む`, content:`使いきれないほど多くのデータやプログラムなどをコンピュータの中に保存すること。`},
{target:`こける`, content:`処理が失敗する。<br>ソフトウェアなどで時刻していた処理が途中で失敗して終了すること。`},
{target:`アベンド`, content:`アブノーマル・エンドの略で、異常終了のこと。`},
{target:`アボート`, content:`実行していた処理に問題があるように感じて、処理を強制的に停止すること。`},
{target:`ジャム`, content:`プリンタやコピー機などで用紙が詰まってしまうトラブルのこと。<br>ネットワークでも一箇所に通信が集中して混雑している状態を指すことがある。`},
{target:`殺す`, content:`制御できない処理を終了する、無効化する。`},
{target:`ゾンビ`, content:`本来の処理は実行が完了しているにもかかわらず、何らかの理由でプロセスとして残り続けている状態のこと。`},
{target:`BAN`, content:`不正な処理や投稿などを行った場合に、アカウントを停止もしくは無効化されること。`},
{target:`死ぬ`, content:`パソコンやサーバーなどが電源の喪失や何らかのエラーなどによって停止する。`},
{target:`クラッシュ`, content:`プログラムが異常終了すること。`},
{target:`ブルースクリーン`, content:`WindowsでOSそのものに深刻なエラーが発生した場合に表示されるメッセージのこと。`},
{target:`叩く`, content:`コマンドを実行する。<br>また、外部にあるサービスやAPIから情報を取得するために呼び出すことを指すこともある。`},
{target:`呼ぶ（呼び出す）`, content:`プログラムの中から他の人が用意した処理を実行すること。`},
{target:`打鍵（だけん）`, content:`キーボードのキーを押すこと。<br>マニュアルなどで操作手順を説明する時に、CUIの画面でキー入力を意味する言葉として使われる。`},
{target:`押下（おうか）`, content:`ボタンなどを押すことを文書で書くときに使う。<br>マウスでGUIのボタンを押すクリックを意味するだけでなく、キーボードのキーを押すことを指すことも多い。`},
{target:`流す`, content:`複数の処理を決められた順番で連続して実行する様子。`},
{target:`回す`, content:`処理を何度も繰り返して実行すること。`},
{target:`ジョブ管理ツール`, content:`複数のジョブ（プログラム）を実行する時、先行処理が正常終了したかどうか、などによって制御できるソフトウェア。`},
{target:`パイプ`, content:`あるコマンドの出力を次のコマンドへ引き渡す処理を指し、小さなコマンドを珠数つなぎにして実行できる。`},
{target:`投げる`, content:`ネットワーク経由で他の人やプログラムに対してデータを送信すること。`},
{target:`渡す`, content:`関数やAPIなどを呼び出す時に、その相手が用意した決められた書式に合わせてデータを送信すること。`},
{target:`配る`, content:`サーバーが複数のクライアントに対してデータを送信するような1対多のやり取りのこと。`},
{target:`なめる`, content:`処理体操のデータが一覧として用意されていて、それを前から順番に処理している様子。`},
{target:`掘る`, content:`ディレクタ（フォルダ）など階層構造にデータが格納されているときに、それを再帰的にたどることや、その先に新しいディレクトリを作成すること。`},
{target:`こぼす`, content:`順番に処理しているはずなのに、抜けや漏れがあり、想定した結果が得られていないこと。`},
{target:`抜く`, content:`データの一覧の中から、一部のデータを取り出すこと。`},
{target:`握り潰す`, content:`エラーを見ないようにする。<br>エラーが発生しても、それを報告せず問題なかったように見せかけて処理すること。`},
{target:`はじく`, content:`データを除外すること。<br>重複したデータが与えられたときに、すでに存在しているデータと同じ値は処理の対象外とする場合などに使われる。`},
{target:`吐く`, content:`プログラムからデータを出力すること。`},
{target:`ダンプ`, content:`エラーなどが発生した場合に、その原因を調査するためにメモリの内容などを出力すること。`},
{target:`しゃべる`, content:`決められた書式に従って、コンピュータが応答している様子。`},
{target:`走る`, content:`プログラムなどのソフトウェアを動くことを指す。`},
{target:`ランタイムライブラリ`, content:`プログラムの実行時に読み込まれるライブラリ。<br>OSやプログラミング言語、実行環境に添付されていることが多い。`},
{target:`抜ける`, content:`繰返し実行されている処理を途中で終了すること。`},
{target:`張り付く`, content:`CPUの使用率が高い状態など、グラフを描いた時にずっと同じ状態が続くこと。`},
{target:`ハングアップ`, content:`OSのレベルで操作を受け付けず、画面の表示が固まったままの状態が長く続いている状態。`},
{target:`オフロード`, content:`処理の一部を他に移すことで、サーバーなどの負荷を下げること。`},
{target:`逃がす`, content:`動作が不安定なサーバーや、容量不足に陥っている場所から必要なデータを取り出すこと。`},
{target:`立てる`, content:`サーバーとして動作させるために必要なソフトウェアをコンピュータに導入、設定すること。`},
{target:`入る`, content:`保守や監視など、何らかの作業をするためにサーバーなどにログインすること。`},
{target:`キッティング`, content:`パソコンを組み立てること。<br>キーボードやマウスなど必要な機器を接続し、ソフトウェアをインストールするなど、利用者が使える状態まで環境を整えること。`},
{target:`開ける`, content:`サーバーなどに対する通信を許可すること。<br>サーバーにはその機能に応じたポート番号が決まっており、ポートを開けることで該当のサーバーで通信が可能になる。`},
{target:`技術的には可能です`, content:`膨大なお金と時間がかかる、面倒なのでやりたくない。`},
{target:`トレードオフ`, content:`コストと利便性のように、何かを求めると何かを犠牲しなければいけない、といった相反する状況のこと。`},
{target:`デスマーチ`, content:`予算や人員、スケジュールなどに問題が発生していて、納期に間に合わない状態。`},
{target:`完全に理解した`, content:`わかったつもりになっている。<br>入門書の内容などを理解しただけで、その技術の全体を理解したつもりになっている状況のこと。`},
{target:`ダニング＝グルーガー効果`, content:`能力の低い人ほど、自分の能力が低いということに気づいていない、という認知バイアスのこと。<br>自己の過大評価とも呼ばれ、実力が伴っていない状況を指す。`},
{target:`写経する`, content:`プログラミングを勉強する時などに、サンプルなど他の人が書いたソースコードを自分で入力すること。`},
]
